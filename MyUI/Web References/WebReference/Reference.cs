//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5466 版自动生成。
// 
#pragma warning disable 1591

namespace MyUI.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="gunServicesSoapBinding", Namespace="http://webserviceImpl.gunark.bjut.com/")]
    public partial class gunServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setGunPosNotOnGunarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentBulletTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunPositionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTaskStatusByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOnDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunOnPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFingerUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeDoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadOpenMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunNotOnPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDoingTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeSealOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeAllotOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFinishTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunInStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSynGunarkInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMagazineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentGunTaskOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public gunServices() {
            this.Url = global::MyUI.Properties.Settings.Default.MyUI_WebReference_gunServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setGunPosNotOnGunarkCompletedEventHandler setGunPosNotOnGunarkCompleted;
        
        /// <remarks/>
        public event setUrgentBulletTaskCompletedEventHandler setUrgentBulletTaskCompleted;
        
        /// <remarks/>
        public event setOnlineCompletedEventHandler setOnlineCompleted;
        
        /// <remarks/>
        public event getGunPositionInfoCompletedEventHandler getGunPositionInfoCompleted;
        
        /// <remarks/>
        public event updateTaskStatusByIdCompletedEventHandler updateTaskStatusByIdCompleted;
        
        /// <remarks/>
        public event getOnDutyCompletedEventHandler getOnDutyCompleted;
        
        /// <remarks/>
        public event getTaskDetailCompletedEventHandler getTaskDetailCompleted;
        
        /// <remarks/>
        public event setGunOnPositionCompletedEventHandler setGunOnPositionCompleted;
        
        /// <remarks/>
        public event getFingerUserInfoCompletedEventHandler getFingerUserInfoCompleted;
        
        /// <remarks/>
        public event closeDoorCompletedEventHandler closeDoorCompleted;
        
        /// <remarks/>
        public event uploadOpenMessageCompletedEventHandler uploadOpenMessageCompleted;
        
        /// <remarks/>
        public event setGunNotOnPositionCompletedEventHandler setGunNotOnPositionCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event setGunBeScrapCompletedEventHandler setGunBeScrapCompleted;
        
        /// <remarks/>
        public event setDoingTaskCompletedEventHandler setDoingTaskCompleted;
        
        /// <remarks/>
        public event getGunInfoCompletedEventHandler getGunInfoCompleted;
        
        /// <remarks/>
        public event setGunBeSealCompletedEventHandler setGunBeSealCompleted;
        
        /// <remarks/>
        public event getGunarkListCompletedEventHandler getGunarkListCompleted;
        
        /// <remarks/>
        public event cancelAlarmCompletedEventHandler cancelAlarmCompleted;
        
        /// <remarks/>
        public event setOfflineCompletedEventHandler setOfflineCompleted;
        
        /// <remarks/>
        public event setTemperatureCompletedEventHandler setTemperatureCompleted;
        
        /// <remarks/>
        public event setAlarmCompletedEventHandler setAlarmCompleted;
        
        /// <remarks/>
        public event setGunBeAllotCompletedEventHandler setGunBeAllotCompleted;
        
        /// <remarks/>
        public event setTurnCompletedEventHandler setTurnCompleted;
        
        /// <remarks/>
        public event setFinishTaskCompletedEventHandler setFinishTaskCompleted;
        
        /// <remarks/>
        public event setGunInStoreCompletedEventHandler setGunInStoreCompleted;
        
        /// <remarks/>
        public event getSynGunarkInfoCompletedEventHandler getSynGunarkInfoCompleted;
        
        /// <remarks/>
        public event getUnitInfoCompletedEventHandler getUnitInfoCompleted;
        
        /// <remarks/>
        public event getTaskInfoCompletedEventHandler getTaskInfoCompleted;
        
        /// <remarks/>
        public event getMagazineInfoCompletedEventHandler getMagazineInfoCompleted;
        
        /// <remarks/>
        public event getGunarkInfoCompletedEventHandler getGunarkInfoCompleted;
        
        /// <remarks/>
        public event setUrgentGunTaskCompletedEventHandler setUrgentGunTaskCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunPosNotOnGunark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunPosNotOnGunark", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunPosNotOnGunarkAsync(string arg0, string arg1, string arg2) {
            this.setGunPosNotOnGunarkAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunPosNotOnGunarkAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunPosNotOnGunarkOperationCompleted == null)) {
                this.setGunPosNotOnGunarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunPosNotOnGunarkOperationCompleted);
            }
            this.InvokeAsync("setGunPosNotOnGunark", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunPosNotOnGunarkOperationCompleted, userState);
        }
        
        private void OnsetGunPosNotOnGunarkOperationCompleted(object arg) {
            if ((this.setGunPosNotOnGunarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunPosNotOnGunarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] setUrgentBulletTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute("arg4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg6Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg8) {
            object[] results = this.Invoke("setUrgentBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg6Specified,
                        arg7,
                        arg8});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void setUrgentBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, int[] arg4, string arg5, System.DateTime arg6, bool arg6Specified, string arg7, string arg8) {
            this.setUrgentBulletTaskAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg6Specified, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void setUrgentBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, int[] arg4, string arg5, System.DateTime arg6, bool arg6Specified, string arg7, string arg8, object userState) {
            if ((this.setUrgentBulletTaskOperationCompleted == null)) {
                this.setUrgentBulletTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentBulletTaskOperationCompleted);
            }
            this.InvokeAsync("setUrgentBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg6Specified,
                        arg7,
                        arg8}, this.setUrgentBulletTaskOperationCompleted, userState);
        }
        
        private void OnsetUrgentBulletTaskOperationCompleted(object arg) {
            if ((this.setUrgentBulletTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentBulletTaskCompleted(this, new setUrgentBulletTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOnline([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("setOnline", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setOnlineAsync(string arg0, string arg1) {
            this.setOnlineAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setOnlineAsync(string arg0, string arg1, object userState) {
            if ((this.setOnlineOperationCompleted == null)) {
                this.setOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOnlineOperationCompleted);
            }
            this.InvokeAsync("setOnline", new object[] {
                        arg0,
                        arg1}, this.setOnlineOperationCompleted, userState);
        }
        
        private void OnsetOnlineOperationCompleted(object arg) {
            if ((this.setOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOnlineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunPositionInfo[] getGunPositionInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getGunPositionInfo", new object[] {
                        arg0,
                        arg1});
            return ((gunPositionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunPositionInfoAsync(string arg0, string arg1) {
            this.getGunPositionInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGunPositionInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getGunPositionInfoOperationCompleted == null)) {
                this.getGunPositionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunPositionInfoOperationCompleted);
            }
            this.InvokeAsync("getGunPositionInfo", new object[] {
                        arg0,
                        arg1}, this.getGunPositionInfoOperationCompleted, userState);
        }
        
        private void OngetGunPositionInfoOperationCompleted(object arg) {
            if ((this.getGunPositionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunPositionInfoCompleted(this, new getGunPositionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateTaskStatusById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg1) {
            this.Invoke("updateTaskStatusById", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void updateTaskStatusByIdAsync(string arg0, int arg1) {
            this.updateTaskStatusByIdAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void updateTaskStatusByIdAsync(string arg0, int arg1, object userState) {
            if ((this.updateTaskStatusByIdOperationCompleted == null)) {
                this.updateTaskStatusByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskStatusByIdOperationCompleted);
            }
            this.InvokeAsync("updateTaskStatusById", new object[] {
                        arg0,
                        arg1}, this.updateTaskStatusByIdOperationCompleted, userState);
        }
        
        private void OnupdateTaskStatusByIdOperationCompleted(object arg) {
            if ((this.updateTaskStatusByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTaskStatusByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArkAdmin[] getOnDuty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getOnDuty", new object[] {
                        arg0});
            return ((gunArkAdmin[])(results[0]));
        }
        
        /// <remarks/>
        public void getOnDutyAsync(string arg0) {
            this.getOnDutyAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getOnDutyAsync(string arg0, object userState) {
            if ((this.getOnDutyOperationCompleted == null)) {
                this.getOnDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnDutyOperationCompleted);
            }
            this.InvokeAsync("getOnDuty", new object[] {
                        arg0}, this.getOnDutyOperationCompleted, userState);
        }
        
        private void OngetOnDutyOperationCompleted(object arg) {
            if ((this.getOnDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOnDutyCompleted(this, new getOnDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfoDetail[] getTaskDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getTaskDetail", new object[] {
                        arg0});
            return ((taskInfoDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskDetailAsync(string arg0) {
            this.getTaskDetailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getTaskDetailAsync(string arg0, object userState) {
            if ((this.getTaskDetailOperationCompleted == null)) {
                this.getTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskDetailOperationCompleted);
            }
            this.InvokeAsync("getTaskDetail", new object[] {
                        arg0}, this.getTaskDetailOperationCompleted, userState);
        }
        
        private void OngetTaskDetailOperationCompleted(object arg) {
            if ((this.getTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskDetailCompleted(this, new getTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunOnPosition([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunOnPositionAsync(string arg0, string arg1, string arg2) {
            this.setGunOnPositionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunOnPositionAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunOnPositionOperationCompleted == null)) {
                this.setGunOnPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunOnPositionOperationCompleted);
            }
            this.InvokeAsync("setGunOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunOnPositionOperationCompleted, userState);
        }
        
        private void OnsetGunOnPositionOperationCompleted(object arg) {
            if ((this.setGunOnPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunOnPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fingerUser[] getFingerUserInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getFingerUserInfo", new object[] {
                        arg0,
                        arg1});
            return ((fingerUser[])(results[0]));
        }
        
        /// <remarks/>
        public void getFingerUserInfoAsync(string arg0, string arg1) {
            this.getFingerUserInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getFingerUserInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getFingerUserInfoOperationCompleted == null)) {
                this.getFingerUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFingerUserInfoOperationCompleted);
            }
            this.InvokeAsync("getFingerUserInfo", new object[] {
                        arg0,
                        arg1}, this.getFingerUserInfoOperationCompleted, userState);
        }
        
        private void OngetFingerUserInfoOperationCompleted(object arg) {
            if ((this.getFingerUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFingerUserInfoCompleted(this, new getFingerUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void closeDoor([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("closeDoor", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void closeDoorAsync(string arg0, string arg1) {
            this.closeDoorAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void closeDoorAsync(string arg0, string arg1, object userState) {
            if ((this.closeDoorOperationCompleted == null)) {
                this.closeDoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseDoorOperationCompleted);
            }
            this.InvokeAsync("closeDoor", new object[] {
                        arg0,
                        arg1}, this.closeDoorOperationCompleted, userState);
        }
        
        private void OncloseDoorOperationCompleted(object arg) {
            if ((this.closeDoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeDoorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadOpenMessage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg4Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg5) {
            this.Invoke("uploadOpenMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg4Specified,
                        arg5});
        }
        
        /// <remarks/>
        public void uploadOpenMessageAsync(string arg0, string arg1, string arg2, string arg3, System.DateTime arg4, bool arg4Specified, int arg5) {
            this.uploadOpenMessageAsync(arg0, arg1, arg2, arg3, arg4, arg4Specified, arg5, null);
        }
        
        /// <remarks/>
        public void uploadOpenMessageAsync(string arg0, string arg1, string arg2, string arg3, System.DateTime arg4, bool arg4Specified, int arg5, object userState) {
            if ((this.uploadOpenMessageOperationCompleted == null)) {
                this.uploadOpenMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadOpenMessageOperationCompleted);
            }
            this.InvokeAsync("uploadOpenMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg4Specified,
                        arg5}, this.uploadOpenMessageOperationCompleted, userState);
        }
        
        private void OnuploadOpenMessageOperationCompleted(object arg) {
            if ((this.uploadOpenMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadOpenMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunNotOnPosition([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunNotOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunNotOnPositionAsync(string arg0, string arg1, string arg2) {
            this.setGunNotOnPositionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunNotOnPositionAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunNotOnPositionOperationCompleted == null)) {
                this.setGunNotOnPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunNotOnPositionOperationCompleted);
            }
            this.InvokeAsync("setGunNotOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunNotOnPositionOperationCompleted, userState);
        }
        
        private void OnsetGunNotOnPositionOperationCompleted(object arg) {
            if ((this.setGunNotOnPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunNotOnPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user[] getUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUser", new object[] {
                        arg0});
            return ((user[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(string arg0) {
            this.getUserAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUserAsync(string arg0, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        arg0}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeScrap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeScrap", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeScrapAsync(string arg0) {
            this.setGunBeScrapAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeScrapAsync(string arg0, object userState) {
            if ((this.setGunBeScrapOperationCompleted == null)) {
                this.setGunBeScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeScrapOperationCompleted);
            }
            this.InvokeAsync("setGunBeScrap", new object[] {
                        arg0}, this.setGunBeScrapOperationCompleted, userState);
        }
        
        private void OnsetGunBeScrapOperationCompleted(object arg) {
            if ((this.setGunBeScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeScrapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDoingTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            this.Invoke("setDoingTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDoingTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3) {
            this.setDoingTaskAsync(arg0, arg1, arg1Specified, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDoingTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3, object userState) {
            if ((this.setDoingTaskOperationCompleted == null)) {
                this.setDoingTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDoingTaskOperationCompleted);
            }
            this.InvokeAsync("setDoingTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3}, this.setDoingTaskOperationCompleted, userState);
        }
        
        private void OnsetDoingTaskOperationCompleted(object arg) {
            if ((this.setDoingTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDoingTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunInfo[] getGunInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getGunInfo", new object[] {
                        arg0,
                        arg1});
            return ((gunInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunInfoAsync(string arg0, string arg1) {
            this.getGunInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGunInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getGunInfoOperationCompleted == null)) {
                this.getGunInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunInfoOperationCompleted);
            }
            this.InvokeAsync("getGunInfo", new object[] {
                        arg0,
                        arg1}, this.getGunInfoOperationCompleted, userState);
        }
        
        private void OngetGunInfoOperationCompleted(object arg) {
            if ((this.getGunInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunInfoCompleted(this, new getGunInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeSeal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeSeal", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeSealAsync(string arg0) {
            this.setGunBeSealAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeSealAsync(string arg0, object userState) {
            if ((this.setGunBeSealOperationCompleted == null)) {
                this.setGunBeSealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeSealOperationCompleted);
            }
            this.InvokeAsync("setGunBeSeal", new object[] {
                        arg0}, this.setGunBeSealOperationCompleted, userState);
        }
        
        private void OnsetGunBeSealOperationCompleted(object arg) {
            if ((this.setGunBeSealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeSealCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk[] getGunarkList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkList", new object[] {
                        arg0});
            return ((gunArk[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkListAsync(string arg0) {
            this.getGunarkListAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkListAsync(string arg0, object userState) {
            if ((this.getGunarkListOperationCompleted == null)) {
                this.getGunarkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkListOperationCompleted);
            }
            this.InvokeAsync("getGunarkList", new object[] {
                        arg0}, this.getGunarkListOperationCompleted, userState);
        }
        
        private void OngetGunarkListOperationCompleted(object arg) {
            if ((this.getGunarkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkListCompleted(this, new getGunarkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelAlarm([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg3Specified) {
            this.Invoke("cancelAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified});
        }
        
        /// <remarks/>
        public void cancelAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified) {
            this.cancelAlarmAsync(arg0, arg1, arg2, arg3, arg3Specified, null);
        }
        
        /// <remarks/>
        public void cancelAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, object userState) {
            if ((this.cancelAlarmOperationCompleted == null)) {
                this.cancelAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelAlarmOperationCompleted);
            }
            this.InvokeAsync("cancelAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified}, this.cancelAlarmOperationCompleted, userState);
        }
        
        private void OncancelAlarmOperationCompleted(object arg) {
            if ((this.cancelAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelAlarmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOffline([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("setOffline", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setOfflineAsync(string arg0, string arg1) {
            this.setOfflineAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setOfflineAsync(string arg0, string arg1, object userState) {
            if ((this.setOfflineOperationCompleted == null)) {
                this.setOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOfflineOperationCompleted);
            }
            this.InvokeAsync("setOffline", new object[] {
                        arg0,
                        arg1}, this.setOfflineOperationCompleted, userState);
        }
        
        private void OnsetOfflineOperationCompleted(object arg) {
            if ((this.setOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOfflineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTemperature([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            this.Invoke("setTemperature", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setTemperatureAsync(string arg0, string arg1, int arg2) {
            this.setTemperatureAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setTemperatureAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.setTemperatureOperationCompleted == null)) {
                this.setTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTemperatureOperationCompleted);
            }
            this.InvokeAsync("setTemperature", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setTemperatureOperationCompleted, userState);
        }
        
        private void OnsetTemperatureOperationCompleted(object arg) {
            if ((this.setTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTemperatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setAlarm([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg3Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("setAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, string arg4) {
            this.setAlarmAsync(arg0, arg1, arg2, arg3, arg3Specified, arg4, null);
        }
        
        /// <remarks/>
        public void setAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, string arg4, object userState) {
            if ((this.setAlarmOperationCompleted == null)) {
                this.setAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAlarmOperationCompleted);
            }
            this.InvokeAsync("setAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified,
                        arg4}, this.setAlarmOperationCompleted, userState);
        }
        
        private void OnsetAlarmOperationCompleted(object arg) {
            if ((this.setAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAlarmCompleted(this, new setAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeAllot([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeAllot", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeAllotAsync(string arg0) {
            this.setGunBeAllotAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeAllotAsync(string arg0, object userState) {
            if ((this.setGunBeAllotOperationCompleted == null)) {
                this.setGunBeAllotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeAllotOperationCompleted);
            }
            this.InvokeAsync("setGunBeAllot", new object[] {
                        arg0}, this.setGunBeAllotOperationCompleted, userState);
        }
        
        private void OnsetGunBeAllotOperationCompleted(object arg) {
            if ((this.setGunBeAllotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeAllotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTurn([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            this.Invoke("setTurn", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setTurnAsync(string arg0, string arg1, int arg2) {
            this.setTurnAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setTurnAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.setTurnOperationCompleted == null)) {
                this.setTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTurnOperationCompleted);
            }
            this.InvokeAsync("setTurn", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setTurnOperationCompleted, userState);
        }
        
        private void OnsetTurnOperationCompleted(object arg) {
            if ((this.setTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTurnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFinishTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            this.Invoke("setFinishTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setFinishTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3) {
            this.setFinishTaskAsync(arg0, arg1, arg1Specified, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setFinishTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3, object userState) {
            if ((this.setFinishTaskOperationCompleted == null)) {
                this.setFinishTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFinishTaskOperationCompleted);
            }
            this.InvokeAsync("setFinishTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3}, this.setFinishTaskOperationCompleted, userState);
        }
        
        private void OnsetFinishTaskOperationCompleted(object arg) {
            if ((this.setFinishTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFinishTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunInStore([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunInStore", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunInStoreAsync(string arg0) {
            this.setGunInStoreAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunInStoreAsync(string arg0, object userState) {
            if ((this.setGunInStoreOperationCompleted == null)) {
                this.setGunInStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunInStoreOperationCompleted);
            }
            this.InvokeAsync("setGunInStore", new object[] {
                        arg0}, this.setGunInStoreOperationCompleted, userState);
        }
        
        private void OnsetGunInStoreOperationCompleted(object arg) {
            if ((this.setGunInStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunInStoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSynGunarkInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("getSynGunarkInfo", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void getSynGunarkInfoAsync(string arg0) {
            this.getSynGunarkInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getSynGunarkInfoAsync(string arg0, object userState) {
            if ((this.getSynGunarkInfoOperationCompleted == null)) {
                this.getSynGunarkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSynGunarkInfoOperationCompleted);
            }
            this.InvokeAsync("getSynGunarkInfo", new object[] {
                        arg0}, this.getSynGunarkInfoOperationCompleted, userState);
        }
        
        private void OngetSynGunarkInfoOperationCompleted(object arg) {
            if ((this.getSynGunarkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSynGunarkInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo getUnitInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUnitInfo", new object[] {
                        arg0});
            return ((unitInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUnitInfoAsync(string arg0) {
            this.getUnitInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUnitInfoAsync(string arg0, object userState) {
            if ((this.getUnitInfoOperationCompleted == null)) {
                this.getUnitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitInfoOperationCompleted);
            }
            this.InvokeAsync("getUnitInfo", new object[] {
                        arg0}, this.getUnitInfoOperationCompleted, userState);
        }
        
        private void OngetUnitInfoOperationCompleted(object arg) {
            if ((this.getUnitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitInfoCompleted(this, new getUnitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfo[] getTaskInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getTaskInfo", new object[] {
                        arg0,
                        arg1});
            return ((taskInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string arg0, string arg1) {
            this.getTaskInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getTaskInfoOperationCompleted == null)) {
                this.getTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("getTaskInfo", new object[] {
                        arg0,
                        arg1}, this.getTaskInfoOperationCompleted, userState);
        }
        
        private void OngetTaskInfoOperationCompleted(object arg) {
            if ((this.getTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskInfoCompleted(this, new getTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public magazineInfo[] getMagazineInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getMagazineInfo", new object[] {
                        arg0,
                        arg1});
            return ((magazineInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getMagazineInfoAsync(string arg0, string arg1) {
            this.getMagazineInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMagazineInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getMagazineInfoOperationCompleted == null)) {
                this.getMagazineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMagazineInfoOperationCompleted);
            }
            this.InvokeAsync("getMagazineInfo", new object[] {
                        arg0,
                        arg1}, this.getMagazineInfoOperationCompleted, userState);
        }
        
        private void OngetMagazineInfoOperationCompleted(object arg) {
            if ((this.getMagazineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMagazineInfoCompleted(this, new getMagazineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk getGunarkInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkInfo", new object[] {
                        arg0});
            return ((gunArk)(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkInfoAsync(string arg0) {
            this.getGunarkInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkInfoAsync(string arg0, object userState) {
            if ((this.getGunarkInfoOperationCompleted == null)) {
                this.getGunarkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkInfoOperationCompleted);
            }
            this.InvokeAsync("getGunarkInfo", new object[] {
                        arg0}, this.getGunarkInfoOperationCompleted, userState);
        }
        
        private void OngetGunarkInfoOperationCompleted(object arg) {
            if ((this.getGunarkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkInfoCompleted(this, new getGunarkInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] setUrgentGunTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg5Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7) {
            object[] results = this.Invoke("setUrgentGunTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg5Specified,
                        arg6,
                        arg7});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void setUrgentGunTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string arg4, System.DateTime arg5, bool arg5Specified, string arg6, string arg7) {
            this.setUrgentGunTaskAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg5Specified, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void setUrgentGunTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string arg4, System.DateTime arg5, bool arg5Specified, string arg6, string arg7, object userState) {
            if ((this.setUrgentGunTaskOperationCompleted == null)) {
                this.setUrgentGunTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentGunTaskOperationCompleted);
            }
            this.InvokeAsync("setUrgentGunTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg5Specified,
                        arg6,
                        arg7}, this.setUrgentGunTaskOperationCompleted, userState);
        }
        
        private void OnsetUrgentGunTaskOperationCompleted(object arg) {
            if ((this.setUrgentGunTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentGunTaskCompleted(this, new setUrgentGunTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunPositionInfo {
        
        private gunArk gunArkField;
        
        private string gun_Bullet_NameField;
        
        private string gun_Bullet_NumberField;
        
        private string gun_Info_IDField;
        
        private string gun_Position_Info_IdField;
        
        private string gun_Position_NumberField;
        
        private int gun_Position_StatusField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Name {
            get {
                return this.gun_Bullet_NameField;
            }
            set {
                this.gun_Bullet_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Number {
            get {
                return this.gun_Bullet_NumberField;
            }
            set {
                this.gun_Bullet_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Info_ID {
            get {
                return this.gun_Info_IDField;
            }
            set {
                this.gun_Info_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Position_Info_Id {
            get {
                return this.gun_Position_Info_IdField;
            }
            set {
                this.gun_Position_Info_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Position_Number {
            get {
                return this.gun_Position_NumberField;
            }
            set {
                this.gun_Position_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Position_Status {
            get {
                return this.gun_Position_StatusField;
            }
            set {
                this.gun_Position_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunArk {
        
        private System.DateTime enterTimeField;
        
        private bool enterTimeFieldSpecified;
        
        private string gunarkGatewayField;
        
        private string gunarkIdField;
        
        private string gunarkIpField;
        
        private string gunarkLocationField;
        
        private string gunarkNameField;
        
        private string gunarkPicUrlField;
        
        private string gunarkPortField;
        
        private string gunarkSizeField;
        
        private int gunarkStatusField;
        
        private string gunarkSubnetField;
        
        private string gunarkTypeField;
        
        private string gunarkVerifyStatusField;
        
        private bool isOnlineField;
        
        private bool isOpenField;
        
        private bool isPowerOnField;
        
        private bool isSealUpField;
        
        private bool isWarningField;
        
        private string numOfBulletField;
        
        private string numOfBulletWarehouseField;
        
        private string numOfGunField;
        
        private string remarkField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime enterTime {
            get {
                return this.enterTimeField;
            }
            set {
                this.enterTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enterTimeSpecified {
            get {
                return this.enterTimeFieldSpecified;
            }
            set {
                this.enterTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkGateway {
            get {
                return this.gunarkGatewayField;
            }
            set {
                this.gunarkGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkId {
            get {
                return this.gunarkIdField;
            }
            set {
                this.gunarkIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkIp {
            get {
                return this.gunarkIpField;
            }
            set {
                this.gunarkIpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkLocation {
            get {
                return this.gunarkLocationField;
            }
            set {
                this.gunarkLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkName {
            get {
                return this.gunarkNameField;
            }
            set {
                this.gunarkNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkPicUrl {
            get {
                return this.gunarkPicUrlField;
            }
            set {
                this.gunarkPicUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkPort {
            get {
                return this.gunarkPortField;
            }
            set {
                this.gunarkPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkSize {
            get {
                return this.gunarkSizeField;
            }
            set {
                this.gunarkSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gunarkStatus {
            get {
                return this.gunarkStatusField;
            }
            set {
                this.gunarkStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkSubnet {
            get {
                return this.gunarkSubnetField;
            }
            set {
                this.gunarkSubnetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkType {
            get {
                return this.gunarkTypeField;
            }
            set {
                this.gunarkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkVerifyStatus {
            get {
                return this.gunarkVerifyStatusField;
            }
            set {
                this.gunarkVerifyStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOpen {
            get {
                return this.isOpenField;
            }
            set {
                this.isOpenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isPowerOn {
            get {
                return this.isPowerOnField;
            }
            set {
                this.isPowerOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSealUp {
            get {
                return this.isSealUpField;
            }
            set {
                this.isSealUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isWarning {
            get {
                return this.isWarningField;
            }
            set {
                this.isWarningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfBullet {
            get {
                return this.numOfBulletField;
            }
            set {
                this.numOfBulletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfBulletWarehouse {
            get {
                return this.numOfBulletWarehouseField;
            }
            set {
                this.numOfBulletWarehouseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfGun {
            get {
                return this.numOfGunField;
            }
            set {
                this.numOfGunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class unitInfo {
        
        private string supUnitField;
        
        private string unitCodeField;
        
        private string unitFatherCodeField;
        
        private string unitInfoAddressField;
        
        private string unitInfoCodeField;
        
        private string unitInfoNameField;
        
        private string unitInfoOfficeTelephoneField;
        
        private string unitInfoRemarkField;
        
        private string unitInfoSmallNameField;
        
        private string unitInfoStateField;
        
        private int unitInfosortField;
        
        private unitInfo[] untiListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string supUnit {
            get {
                return this.supUnitField;
            }
            set {
                this.supUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitFatherCode {
            get {
                return this.unitFatherCodeField;
            }
            set {
                this.unitFatherCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoAddress {
            get {
                return this.unitInfoAddressField;
            }
            set {
                this.unitInfoAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoCode {
            get {
                return this.unitInfoCodeField;
            }
            set {
                this.unitInfoCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoName {
            get {
                return this.unitInfoNameField;
            }
            set {
                this.unitInfoNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoOfficeTelephone {
            get {
                return this.unitInfoOfficeTelephoneField;
            }
            set {
                this.unitInfoOfficeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoRemark {
            get {
                return this.unitInfoRemarkField;
            }
            set {
                this.unitInfoRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoSmallName {
            get {
                return this.unitInfoSmallNameField;
            }
            set {
                this.unitInfoSmallNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoState {
            get {
                return this.unitInfoStateField;
            }
            set {
                this.unitInfoStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int unitInfosort {
            get {
                return this.unitInfosortField;
            }
            set {
                this.unitInfosortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("untiList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public unitInfo[] untiList {
            get {
                return this.untiListField;
            }
            set {
                this.untiListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class fingerUser {
        
        private int fingerNumberField;
        
        private string fingerPrintIdField;
        
        private string unitCodeField;
        
        private byte[] userFingerPrintField;
        
        private string userNameField;
        
        private string userPoliceNumbField;
        
        private string userPwdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fingerNumber {
            get {
                return this.fingerNumberField;
            }
            set {
                this.fingerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fingerPrintId {
            get {
                return this.fingerPrintIdField;
            }
            set {
                this.fingerPrintIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] userFingerPrint {
            get {
                return this.userFingerPrintField;
            }
            set {
                this.userFingerPrintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceNumb {
            get {
                return this.userPoliceNumbField;
            }
            set {
                this.userPoliceNumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class taskInfo {
        
        private string apply_UnitField;
        
        private gunArk gunArkField;
        
        private string gun_Task_IdField;
        
        private string rejectRemarkField;
        
        private user rejectUserField;
        
        private user return_GunBullet_Admin1Field;
        
        private user return_GunBullet_Admin2Field;
        
        private user take_GunBullet_Admin1Field;
        
        private user take_GunBullet_Admin2Field;
        
        private string task_Afterwards_DescriptionField;
        
        private string task_Afterwards_HandleField;
        
        private System.DateTime task_Afterwards_TimeField;
        
        private bool task_Afterwards_TimeFieldSpecified;
        
        private string task_Apply_RemarkField;
        
        private System.DateTime task_Apply_TimeField;
        
        private bool task_Apply_TimeFieldSpecified;
        
        private user task_Apply_UserField;
        
        private string task_Approval_RemarkField;
        
        private System.DateTime task_Approval_TimeField;
        
        private bool task_Approval_TimeFieldSpecified;
        
        private user task_Approval_UserField;
        
        private int task_BigTypeField;
        
        private string task_Check_RemarkField;
        
        private System.DateTime task_Check_TimeField;
        
        private bool task_Check_TimeFieldSpecified;
        
        private user task_Check_UserField;
        
        private int task_Flag_TypeField;
        
        private string task_IDField;
        
        private System.DateTime task_Plan_BeginTimeField;
        
        private bool task_Plan_BeginTimeFieldSpecified;
        
        private System.DateTime task_Plan_FinishTimeField;
        
        private bool task_Plan_FinishTimeFieldSpecified;
        
        private string task_PropertyField;
        
        private System.DateTime task_Real_BeginTimeField;
        
        private bool task_Real_BeginTimeFieldSpecified;
        
        private System.DateTime task_Real_FinishTimeField;
        
        private bool task_Real_FinishTimeFieldSpecified;
        
        private string task_SmallTypeField;
        
        private int task_StatusField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string apply_Unit {
            get {
                return this.apply_UnitField;
            }
            set {
                this.apply_UnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Task_Id {
            get {
                return this.gun_Task_IdField;
            }
            set {
                this.gun_Task_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rejectRemark {
            get {
                return this.rejectRemarkField;
            }
            set {
                this.rejectRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user rejectUser {
            get {
                return this.rejectUserField;
            }
            set {
                this.rejectUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_Admin1 {
            get {
                return this.return_GunBullet_Admin1Field;
            }
            set {
                this.return_GunBullet_Admin1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_Admin2 {
            get {
                return this.return_GunBullet_Admin2Field;
            }
            set {
                this.return_GunBullet_Admin2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_Admin1 {
            get {
                return this.take_GunBullet_Admin1Field;
            }
            set {
                this.take_GunBullet_Admin1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_Admin2 {
            get {
                return this.take_GunBullet_Admin2Field;
            }
            set {
                this.take_GunBullet_Admin2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Afterwards_Description {
            get {
                return this.task_Afterwards_DescriptionField;
            }
            set {
                this.task_Afterwards_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Afterwards_Handle {
            get {
                return this.task_Afterwards_HandleField;
            }
            set {
                this.task_Afterwards_HandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Afterwards_Time {
            get {
                return this.task_Afterwards_TimeField;
            }
            set {
                this.task_Afterwards_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Afterwards_TimeSpecified {
            get {
                return this.task_Afterwards_TimeFieldSpecified;
            }
            set {
                this.task_Afterwards_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Apply_Remark {
            get {
                return this.task_Apply_RemarkField;
            }
            set {
                this.task_Apply_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Apply_Time {
            get {
                return this.task_Apply_TimeField;
            }
            set {
                this.task_Apply_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Apply_TimeSpecified {
            get {
                return this.task_Apply_TimeFieldSpecified;
            }
            set {
                this.task_Apply_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Apply_User {
            get {
                return this.task_Apply_UserField;
            }
            set {
                this.task_Apply_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Approval_Remark {
            get {
                return this.task_Approval_RemarkField;
            }
            set {
                this.task_Approval_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Approval_Time {
            get {
                return this.task_Approval_TimeField;
            }
            set {
                this.task_Approval_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Approval_TimeSpecified {
            get {
                return this.task_Approval_TimeFieldSpecified;
            }
            set {
                this.task_Approval_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Approval_User {
            get {
                return this.task_Approval_UserField;
            }
            set {
                this.task_Approval_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_BigType {
            get {
                return this.task_BigTypeField;
            }
            set {
                this.task_BigTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Check_Remark {
            get {
                return this.task_Check_RemarkField;
            }
            set {
                this.task_Check_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Check_Time {
            get {
                return this.task_Check_TimeField;
            }
            set {
                this.task_Check_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Check_TimeSpecified {
            get {
                return this.task_Check_TimeFieldSpecified;
            }
            set {
                this.task_Check_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Check_User {
            get {
                return this.task_Check_UserField;
            }
            set {
                this.task_Check_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_Flag_Type {
            get {
                return this.task_Flag_TypeField;
            }
            set {
                this.task_Flag_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_ID {
            get {
                return this.task_IDField;
            }
            set {
                this.task_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Plan_BeginTime {
            get {
                return this.task_Plan_BeginTimeField;
            }
            set {
                this.task_Plan_BeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Plan_BeginTimeSpecified {
            get {
                return this.task_Plan_BeginTimeFieldSpecified;
            }
            set {
                this.task_Plan_BeginTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Plan_FinishTime {
            get {
                return this.task_Plan_FinishTimeField;
            }
            set {
                this.task_Plan_FinishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Plan_FinishTimeSpecified {
            get {
                return this.task_Plan_FinishTimeFieldSpecified;
            }
            set {
                this.task_Plan_FinishTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Property {
            get {
                return this.task_PropertyField;
            }
            set {
                this.task_PropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Real_BeginTime {
            get {
                return this.task_Real_BeginTimeField;
            }
            set {
                this.task_Real_BeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Real_BeginTimeSpecified {
            get {
                return this.task_Real_BeginTimeFieldSpecified;
            }
            set {
                this.task_Real_BeginTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Real_FinishTime {
            get {
                return this.task_Real_FinishTimeField;
            }
            set {
                this.task_Real_FinishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Real_FinishTimeSpecified {
            get {
                return this.task_Real_FinishTimeFieldSpecified;
            }
            set {
                this.task_Real_FinishTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_SmallType {
            get {
                return this.task_SmallTypeField;
            }
            set {
                this.task_SmallTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_Status {
            get {
                return this.task_StatusField;
            }
            set {
                this.task_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class user {
        
        private unitInfo unitInfoField;
        
        private string userAddressField;
        
        private string userCardField;
        
        private string userEmailField;
        
        private string userGunLicenseField;
        
        private string userGunLicenseDateField;
        
        private int userJobStatusField;
        
        private string userMobileTelepField;
        
        private string userNameField;
        
        private string userOfficeTelepField;
        
        private string userPoliceKindsField;
        
        private string userPoliceNumbField;
        
        private string userPostCodeField;
        
        private int userPrivilegesField;
        
        private string userPwdField;
        
        private string userRankField;
        
        private string userRealNameField;
        
        private string userRemarkField;
        
        private int userSexField;
        
        private int userStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userAddress {
            get {
                return this.userAddressField;
            }
            set {
                this.userAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userCard {
            get {
                return this.userCardField;
            }
            set {
                this.userCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userGunLicense {
            get {
                return this.userGunLicenseField;
            }
            set {
                this.userGunLicenseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userGunLicenseDate {
            get {
                return this.userGunLicenseDateField;
            }
            set {
                this.userGunLicenseDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userJobStatus {
            get {
                return this.userJobStatusField;
            }
            set {
                this.userJobStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userMobileTelep {
            get {
                return this.userMobileTelepField;
            }
            set {
                this.userMobileTelepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userOfficeTelep {
            get {
                return this.userOfficeTelepField;
            }
            set {
                this.userOfficeTelepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceKinds {
            get {
                return this.userPoliceKindsField;
            }
            set {
                this.userPoliceKindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceNumb {
            get {
                return this.userPoliceNumbField;
            }
            set {
                this.userPoliceNumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPostCode {
            get {
                return this.userPostCodeField;
            }
            set {
                this.userPostCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userPrivileges {
            get {
                return this.userPrivilegesField;
            }
            set {
                this.userPrivilegesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRank {
            get {
                return this.userRankField;
            }
            set {
                this.userRankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRealName {
            get {
                return this.userRealNameField;
            }
            set {
                this.userRealNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRemark {
            get {
                return this.userRemarkField;
            }
            set {
                this.userRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userSex {
            get {
                return this.userSexField;
            }
            set {
                this.userSexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userState {
            get {
                return this.userStateField;
            }
            set {
                this.userStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class magazineInfo {
        
        private string bullet_ModelField;
        
        private int capacity_QtyField;
        
        private gunArk gunArkField;
        
        private string magazine_Info_IDField;
        
        private string magazine_NameField;
        
        private string magazine_NumberField;
        
        private int magazine_StatusField;
        
        private int stock_QtyField;
        
        private int syn_FlagField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_Model {
            get {
                return this.bullet_ModelField;
            }
            set {
                this.bullet_ModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int capacity_Qty {
            get {
                return this.capacity_QtyField;
            }
            set {
                this.capacity_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Info_ID {
            get {
                return this.magazine_Info_IDField;
            }
            set {
                this.magazine_Info_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Name {
            get {
                return this.magazine_NameField;
            }
            set {
                this.magazine_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Number {
            get {
                return this.magazine_NumberField;
            }
            set {
                this.magazine_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int magazine_Status {
            get {
                return this.magazine_StatusField;
            }
            set {
                this.magazine_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int stock_Qty {
            get {
                return this.stock_QtyField;
            }
            set {
                this.stock_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int syn_Flag {
            get {
                return this.syn_FlagField;
            }
            set {
                this.syn_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunInfo {
        
        private gunArk gunArkField;
        
        private string gun_Bullet_LocationField;
        
        private string gun_Bullet_NameField;
        
        private string gun_Bullet_NumberField;
        
        private int gun_Bullet_StatusField;
        
        private string gun_Info_IdField;
        
        private string gun_License_IdField;
        
        private System.DateTime in_TimeField;
        
        private bool in_TimeFieldSpecified;
        
        private string loss_DescriptionField;
        
        private System.DateTime out_TimeField;
        
        private bool out_TimeFieldSpecified;
        
        private string remarkField;
        
        private int syn_FlagField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Location {
            get {
                return this.gun_Bullet_LocationField;
            }
            set {
                this.gun_Bullet_LocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Name {
            get {
                return this.gun_Bullet_NameField;
            }
            set {
                this.gun_Bullet_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Number {
            get {
                return this.gun_Bullet_NumberField;
            }
            set {
                this.gun_Bullet_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Bullet_Status {
            get {
                return this.gun_Bullet_StatusField;
            }
            set {
                this.gun_Bullet_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Info_Id {
            get {
                return this.gun_Info_IdField;
            }
            set {
                this.gun_Info_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_License_Id {
            get {
                return this.gun_License_IdField;
            }
            set {
                this.gun_License_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime in_Time {
            get {
                return this.in_TimeField;
            }
            set {
                this.in_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool in_TimeSpecified {
            get {
                return this.in_TimeFieldSpecified;
            }
            set {
                this.in_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loss_Description {
            get {
                return this.loss_DescriptionField;
            }
            set {
                this.loss_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime out_Time {
            get {
                return this.out_TimeField;
            }
            set {
                this.out_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool out_TimeSpecified {
            get {
                return this.out_TimeFieldSpecified;
            }
            set {
                this.out_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int syn_Flag {
            get {
                return this.syn_FlagField;
            }
            set {
                this.syn_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class taskInfoDetail {
        
        private int admin_Confirm_FlagField;
        
        private int apply_Bullet_QtyField;
        
        private string bullet_ModelField;
        
        private int depletion_Bullet_QtyField;
        
        private string depletion_Bullet_RemarkField;
        
        private int flag_TypeField;
        
        private gunArk gunArkField;
        
        private gunInfo gunInfoField;
        
        private gunPositionInfo gunPositionInfoField;
        
        private user gun_Duty_UserField;
        
        private int leader_Confirm_FlagField;
        
        private magazineInfo magazineInfoField;
        
        private System.DateTime return_GunBullet_TimeField;
        
        private bool return_GunBullet_TimeFieldSpecified;
        
        private user return_GunBullet_UserField;
        
        private System.DateTime take_GunBullet_TimeField;
        
        private bool take_GunBullet_TimeFieldSpecified;
        
        private user take_GunBullet_UserField;
        
        private taskInfo taskInfoField;
        
        private string task_Detail_IDField;
        
        private unitInfo unitInfoField;
        
        private int user_Confirm_FlagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int admin_Confirm_Flag {
            get {
                return this.admin_Confirm_FlagField;
            }
            set {
                this.admin_Confirm_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int apply_Bullet_Qty {
            get {
                return this.apply_Bullet_QtyField;
            }
            set {
                this.apply_Bullet_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_Model {
            get {
                return this.bullet_ModelField;
            }
            set {
                this.bullet_ModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int depletion_Bullet_Qty {
            get {
                return this.depletion_Bullet_QtyField;
            }
            set {
                this.depletion_Bullet_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string depletion_Bullet_Remark {
            get {
                return this.depletion_Bullet_RemarkField;
            }
            set {
                this.depletion_Bullet_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int flag_Type {
            get {
                return this.flag_TypeField;
            }
            set {
                this.flag_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunInfo gunInfo {
            get {
                return this.gunInfoField;
            }
            set {
                this.gunInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunPositionInfo gunPositionInfo {
            get {
                return this.gunPositionInfoField;
            }
            set {
                this.gunPositionInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user gun_Duty_User {
            get {
                return this.gun_Duty_UserField;
            }
            set {
                this.gun_Duty_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leader_Confirm_Flag {
            get {
                return this.leader_Confirm_FlagField;
            }
            set {
                this.leader_Confirm_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public magazineInfo magazineInfo {
            get {
                return this.magazineInfoField;
            }
            set {
                this.magazineInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime return_GunBullet_Time {
            get {
                return this.return_GunBullet_TimeField;
            }
            set {
                this.return_GunBullet_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool return_GunBullet_TimeSpecified {
            get {
                return this.return_GunBullet_TimeFieldSpecified;
            }
            set {
                this.return_GunBullet_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_User {
            get {
                return this.return_GunBullet_UserField;
            }
            set {
                this.return_GunBullet_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime take_GunBullet_Time {
            get {
                return this.take_GunBullet_TimeField;
            }
            set {
                this.take_GunBullet_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool take_GunBullet_TimeSpecified {
            get {
                return this.take_GunBullet_TimeFieldSpecified;
            }
            set {
                this.take_GunBullet_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_User {
            get {
                return this.take_GunBullet_UserField;
            }
            set {
                this.take_GunBullet_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfo taskInfo {
            get {
                return this.taskInfoField;
            }
            set {
                this.taskInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Detail_ID {
            get {
                return this.task_Detail_IDField;
            }
            set {
                this.task_Detail_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int user_Confirm_Flag {
            get {
                return this.user_Confirm_FlagField;
            }
            set {
                this.user_Confirm_FlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunArkAdmin {
        
        private System.DateTime dutyBeginField;
        
        private bool dutyBeginFieldSpecified;
        
        private System.DateTime dutyEndField;
        
        private bool dutyEndFieldSpecified;
        
        private string idField;
        
        private int statusField;
        
        private user userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dutyBegin {
            get {
                return this.dutyBeginField;
            }
            set {
                this.dutyBeginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyBeginSpecified {
            get {
                return this.dutyBeginFieldSpecified;
            }
            set {
                this.dutyBeginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dutyEnd {
            get {
                return this.dutyEndField;
            }
            set {
                this.dutyEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyEndSpecified {
            get {
                return this.dutyEndFieldSpecified;
            }
            set {
                this.dutyEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunPosNotOnGunarkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentBulletTaskCompletedEventHandler(object sender, setUrgentBulletTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUrgentBulletTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUrgentBulletTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setOnlineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunPositionInfoCompletedEventHandler(object sender, getGunPositionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunPositionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunPositionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunPositionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunPositionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateTaskStatusByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getOnDutyCompletedEventHandler(object sender, getOnDutyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOnDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOnDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArkAdmin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArkAdmin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getTaskDetailCompletedEventHandler(object sender, getTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public taskInfoDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((taskInfoDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunOnPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getFingerUserInfoCompletedEventHandler(object sender, getFingerUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFingerUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFingerUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fingerUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fingerUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void closeDoorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void uploadOpenMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunNotOnPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public user[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((user[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeScrapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setDoingTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunInfoCompletedEventHandler(object sender, getGunInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeSealCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkListCompletedEventHandler(object sender, getGunarkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArk[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void cancelAlarmCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setOfflineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setTemperatureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setAlarmCompletedEventHandler(object sender, setAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeAllotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setTurnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setFinishTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunInStoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSynGunarkInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUnitInfoCompletedEventHandler(object sender, getUnitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public unitInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((unitInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getTaskInfoCompletedEventHandler(object sender, getTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public taskInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((taskInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMagazineInfoCompletedEventHandler(object sender, getMagazineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMagazineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMagazineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public magazineInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((magazineInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkInfoCompletedEventHandler(object sender, getGunarkInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentGunTaskCompletedEventHandler(object sender, setUrgentGunTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUrgentGunTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUrgentGunTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591