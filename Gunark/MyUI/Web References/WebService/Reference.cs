//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5466 版自动生成。
// 
#pragma warning disable 1591

namespace MyUI.WebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="gunServicesSoapBinding", Namespace="http://webserviceImpl.gunark.bjut.com/")]
    public partial class gunServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setGunPosNotOnGunarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyBulletInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRejectDeleteGunarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunPositionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMagazineStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback setChangePositionSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeDoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadOpenMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSynInfoSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkGroupGunBulletOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeScrapOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunPositionSealOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeSealOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunLuggageOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentMissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPrivilegeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBulletTaskStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentBulletTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback reviewCancelTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTaskStatusByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback reviewTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOnDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunOnPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunInUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFingerUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentGunBulletTaskNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunNotOnPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDoingTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMagazineInfoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunarkTaskPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyBulletDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback rejectCancelTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkMessageCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAlarmRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunarkcheckingSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSynInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunpositionLuggageOperationCompleted;
        
        private System.Threading.SendOrPostCallback setgunpositionUnLuggageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserIfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFinishTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunInStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkTaskStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCautionNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMagazineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentGunTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMaintainconfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGunarkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyMagazineDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyBulletGunDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUrgentGunBulletTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback rejectTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunBeAllotOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFingerUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSynGunarkInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyGunarkDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGunarkDeleteTaskPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRejectAddGunarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback reviewModifyTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyGunarkInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public gunServices() {
            this.Url = global::MyUI.Properties.Settings.Default.MyUI_WebReference1_gunServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setGunPosNotOnGunarkCompletedEventHandler setGunPosNotOnGunarkCompleted;
        
        /// <remarks/>
        public event getApplyBulletInfoCompletedEventHandler getApplyBulletInfoCompleted;
        
        /// <remarks/>
        public event setRejectDeleteGunarkCompletedEventHandler setRejectDeleteGunarkCompleted;
        
        /// <remarks/>
        public event setgunExportCompletedEventHandler setgunExportCompleted;
        
        /// <remarks/>
        public event getGunPositionInfoCompletedEventHandler getGunPositionInfoCompleted;
        
        /// <remarks/>
        public event getTaskDetailCompletedEventHandler getTaskDetailCompleted;
        
        /// <remarks/>
        public event setMagazineStockCompletedEventHandler setMagazineStockCompleted;
        
        /// <remarks/>
        public event setChangePositionSuccessCompletedEventHandler setChangePositionSuccessCompleted;
        
        /// <remarks/>
        public event closeDoorCompletedEventHandler closeDoorCompleted;
        
        /// <remarks/>
        public event uploadOpenMessageCompletedEventHandler uploadOpenMessageCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event setSynInfoSuccessCompletedEventHandler setSynInfoSuccessCompleted;
        
        /// <remarks/>
        public event getGunarkGroupGunBulletCompletedEventHandler getGunarkGroupGunBulletCompleted;
        
        /// <remarks/>
        public event setGunBeScrapCompletedEventHandler setGunBeScrapCompleted;
        
        /// <remarks/>
        public event setGunPositionSealCompletedEventHandler setGunPositionSealCompleted;
        
        /// <remarks/>
        public event setGunBeSealCompletedEventHandler setGunBeSealCompleted;
        
        /// <remarks/>
        public event setgunLuggageCompletedEventHandler setgunLuggageCompleted;
        
        /// <remarks/>
        public event setUrgentMissionCompletedEventHandler setUrgentMissionCompleted;
        
        /// <remarks/>
        public event getUserPrivilegeCompletedEventHandler getUserPrivilegeCompleted;
        
        /// <remarks/>
        public event getBulletTaskStateCompletedEventHandler getBulletTaskStateCompleted;
        
        /// <remarks/>
        public event setUrgentBulletTaskCompletedEventHandler setUrgentBulletTaskCompleted;
        
        /// <remarks/>
        public event getUserByUserIDCompletedEventHandler getUserByUserIDCompleted;
        
        /// <remarks/>
        public event reviewCancelTaskCompletedEventHandler reviewCancelTaskCompleted;
        
        /// <remarks/>
        public event setOnlineCompletedEventHandler setOnlineCompleted;
        
        /// <remarks/>
        public event updateTaskStatusByIdCompletedEventHandler updateTaskStatusByIdCompleted;
        
        /// <remarks/>
        public event reviewTaskCompletedEventHandler reviewTaskCompleted;
        
        /// <remarks/>
        public event getOnDutyCompletedEventHandler getOnDutyCompleted;
        
        /// <remarks/>
        public event setGunOnPositionCompletedEventHandler setGunOnPositionCompleted;
        
        /// <remarks/>
        public event setgunInUseCompletedEventHandler setgunInUseCompleted;
        
        /// <remarks/>
        public event getFingerUserInfoCompletedEventHandler getFingerUserInfoCompleted;
        
        /// <remarks/>
        public event setUrgentGunBulletTaskNewCompletedEventHandler setUrgentGunBulletTaskNewCompleted;
        
        /// <remarks/>
        public event setGunNotOnPositionCompletedEventHandler setGunNotOnPositionCompleted;
        
        /// <remarks/>
        public event getUserInfoDetailCompletedEventHandler getUserInfoDetailCompleted;
        
        /// <remarks/>
        public event setDoingTaskCompletedEventHandler setDoingTaskCompleted;
        
        /// <remarks/>
        public event getGunInfoCompletedEventHandler getGunInfoCompleted;
        
        /// <remarks/>
        public event setMagazineInfoCheckCompletedEventHandler setMagazineInfoCheckCompleted;
        
        /// <remarks/>
        public event setGunarkTaskPassCompletedEventHandler setGunarkTaskPassCompleted;
        
        /// <remarks/>
        public event getApplyBulletDetailInfoCompletedEventHandler getApplyBulletDetailInfoCompleted;
        
        /// <remarks/>
        public event rejectCancelTaskCompletedEventHandler rejectCancelTaskCompleted;
        
        /// <remarks/>
        public event getGunarkMessageCodeCompletedEventHandler getGunarkMessageCodeCompleted;
        
        /// <remarks/>
        public event cancelAlarmCompletedEventHandler cancelAlarmCompleted;
        
        /// <remarks/>
        public event getAlarmRecordCompletedEventHandler getAlarmRecordCompleted;
        
        /// <remarks/>
        public event setgunarkcheckingSuccessCompletedEventHandler setgunarkcheckingSuccessCompleted;
        
        /// <remarks/>
        public event getSynInfoCompletedEventHandler getSynInfoCompleted;
        
        /// <remarks/>
        public event setTurnCompletedEventHandler setTurnCompleted;
        
        /// <remarks/>
        public event setgunpositionLuggageCompletedEventHandler setgunpositionLuggageCompleted;
        
        /// <remarks/>
        public event setgunpositionUnLuggageCompletedEventHandler setgunpositionUnLuggageCompleted;
        
        /// <remarks/>
        public event getUserIfoCompletedEventHandler getUserIfoCompleted;
        
        /// <remarks/>
        public event setFinishTaskCompletedEventHandler setFinishTaskCompleted;
        
        /// <remarks/>
        public event setGunInStoreCompletedEventHandler setGunInStoreCompleted;
        
        /// <remarks/>
        public event getUnitInfoCompletedEventHandler getUnitInfoCompleted;
        
        /// <remarks/>
        public event getGunarkTaskStateCompletedEventHandler getGunarkTaskStateCompleted;
        
        /// <remarks/>
        public event getCautionNumCompletedEventHandler getCautionNumCompleted;
        
        /// <remarks/>
        public event getMagazineInfoCompletedEventHandler getMagazineInfoCompleted;
        
        /// <remarks/>
        public event getGunarkInfoCompletedEventHandler getGunarkInfoCompleted;
        
        /// <remarks/>
        public event setUrgentGunTaskCompletedEventHandler setUrgentGunTaskCompleted;
        
        /// <remarks/>
        public event setMaintainconfigCompletedEventHandler setMaintainconfigCompleted;
        
        /// <remarks/>
        public event getGunarkListCompletedEventHandler getGunarkListCompleted;
        
        /// <remarks/>
        public event getApplyMagazineDetailInfoCompletedEventHandler getApplyMagazineDetailInfoCompleted;
        
        /// <remarks/>
        public event getApplyBulletGunDetailInfoCompletedEventHandler getApplyBulletGunDetailInfoCompleted;
        
        /// <remarks/>
        public event setUrgentGunBulletTaskCompletedEventHandler setUrgentGunBulletTaskCompleted;
        
        /// <remarks/>
        public event setOfflineCompletedEventHandler setOfflineCompleted;
        
        /// <remarks/>
        public event setTemperatureCompletedEventHandler setTemperatureCompleted;
        
        /// <remarks/>
        public event rejectTaskCompletedEventHandler rejectTaskCompleted;
        
        /// <remarks/>
        public event setGunBeAllotCompletedEventHandler setGunBeAllotCompleted;
        
        /// <remarks/>
        public event setAlarmCompletedEventHandler setAlarmCompleted;
        
        /// <remarks/>
        public event setFingerUserInfoCompletedEventHandler setFingerUserInfoCompleted;
        
        /// <remarks/>
        public event getSynGunarkInfoCompletedEventHandler getSynGunarkInfoCompleted;
        
        /// <remarks/>
        public event getApplyGunarkDetailInfoCompletedEventHandler getApplyGunarkDetailInfoCompleted;
        
        /// <remarks/>
        public event setGunarkDeleteTaskPassCompletedEventHandler setGunarkDeleteTaskPassCompleted;
        
        /// <remarks/>
        public event getTaskInfoCompletedEventHandler getTaskInfoCompleted;
        
        /// <remarks/>
        public event setRejectAddGunarkCompletedEventHandler setRejectAddGunarkCompleted;
        
        /// <remarks/>
        public event reviewModifyTaskCompletedEventHandler reviewModifyTaskCompleted;
        
        /// <remarks/>
        public event getApplyGunarkInfoCompletedEventHandler getApplyGunarkInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunPosNotOnGunark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunPosNotOnGunark", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunPosNotOnGunarkAsync(string arg0, string arg1, string arg2) {
            this.setGunPosNotOnGunarkAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunPosNotOnGunarkAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunPosNotOnGunarkOperationCompleted == null)) {
                this.setGunPosNotOnGunarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunPosNotOnGunarkOperationCompleted);
            }
            this.InvokeAsync("setGunPosNotOnGunark", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunPosNotOnGunarkOperationCompleted, userState);
        }
        
        private void OnsetGunPosNotOnGunarkOperationCompleted(object arg) {
            if ((this.setGunPosNotOnGunarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunPosNotOnGunarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyBulletInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyBulletInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyBulletInfoAsync(string arg0) {
            this.getApplyBulletInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyBulletInfoAsync(string arg0, object userState) {
            if ((this.getApplyBulletInfoOperationCompleted == null)) {
                this.getApplyBulletInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyBulletInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyBulletInfo", new object[] {
                        arg0}, this.getApplyBulletInfoOperationCompleted, userState);
        }
        
        private void OngetApplyBulletInfoOperationCompleted(object arg) {
            if ((this.getApplyBulletInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyBulletInfoCompleted(this, new getApplyBulletInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setRejectDeleteGunark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("setRejectDeleteGunark", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setRejectDeleteGunarkAsync(string arg0, string arg1, string arg2) {
            this.setRejectDeleteGunarkAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setRejectDeleteGunarkAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setRejectDeleteGunarkOperationCompleted == null)) {
                this.setRejectDeleteGunarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRejectDeleteGunarkOperationCompleted);
            }
            this.InvokeAsync("setRejectDeleteGunark", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setRejectDeleteGunarkOperationCompleted, userState);
        }
        
        private void OnsetRejectDeleteGunarkOperationCompleted(object arg) {
            if ((this.setRejectDeleteGunarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRejectDeleteGunarkCompleted(this, new setRejectDeleteGunarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunExport([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setgunExport", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setgunExportAsync(string arg0) {
            this.setgunExportAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setgunExportAsync(string arg0, object userState) {
            if ((this.setgunExportOperationCompleted == null)) {
                this.setgunExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunExportOperationCompleted);
            }
            this.InvokeAsync("setgunExport", new object[] {
                        arg0}, this.setgunExportOperationCompleted, userState);
        }
        
        private void OnsetgunExportOperationCompleted(object arg) {
            if ((this.setgunExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunExportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunPositionInfo[] getGunPositionInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getGunPositionInfo", new object[] {
                        arg0,
                        arg1});
            return ((gunPositionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunPositionInfoAsync(string arg0, string arg1) {
            this.getGunPositionInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGunPositionInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getGunPositionInfoOperationCompleted == null)) {
                this.getGunPositionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunPositionInfoOperationCompleted);
            }
            this.InvokeAsync("getGunPositionInfo", new object[] {
                        arg0,
                        arg1}, this.getGunPositionInfoOperationCompleted, userState);
        }
        
        private void OngetGunPositionInfoOperationCompleted(object arg) {
            if ((this.getGunPositionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunPositionInfoCompleted(this, new getGunPositionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfoDetail[] getTaskDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getTaskDetail", new object[] {
                        arg0});
            return ((taskInfoDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskDetailAsync(string arg0) {
            this.getTaskDetailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getTaskDetailAsync(string arg0, object userState) {
            if ((this.getTaskDetailOperationCompleted == null)) {
                this.getTaskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskDetailOperationCompleted);
            }
            this.InvokeAsync("getTaskDetail", new object[] {
                        arg0}, this.getTaskDetailOperationCompleted, userState);
        }
        
        private void OngetTaskDetailOperationCompleted(object arg) {
            if ((this.getTaskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskDetailCompleted(this, new getTaskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setMagazineStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg1) {
            this.Invoke("setMagazineStock", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setMagazineStockAsync(string arg0, int arg1) {
            this.setMagazineStockAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setMagazineStockAsync(string arg0, int arg1, object userState) {
            if ((this.setMagazineStockOperationCompleted == null)) {
                this.setMagazineStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMagazineStockOperationCompleted);
            }
            this.InvokeAsync("setMagazineStock", new object[] {
                        arg0,
                        arg1}, this.setMagazineStockOperationCompleted, userState);
        }
        
        private void OnsetMagazineStockOperationCompleted(object arg) {
            if ((this.setMagazineStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMagazineStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setChangePositionSuccess([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] gunPositionInfo arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] gunPositionInfo arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] magazineInfo arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] magazineInfo arg3) {
            this.Invoke("setChangePositionSuccess", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setChangePositionSuccessAsync(gunPositionInfo arg0, gunPositionInfo arg1, magazineInfo arg2, magazineInfo arg3) {
            this.setChangePositionSuccessAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setChangePositionSuccessAsync(gunPositionInfo arg0, gunPositionInfo arg1, magazineInfo arg2, magazineInfo arg3, object userState) {
            if ((this.setChangePositionSuccessOperationCompleted == null)) {
                this.setChangePositionSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetChangePositionSuccessOperationCompleted);
            }
            this.InvokeAsync("setChangePositionSuccess", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setChangePositionSuccessOperationCompleted, userState);
        }
        
        private void OnsetChangePositionSuccessOperationCompleted(object arg) {
            if ((this.setChangePositionSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setChangePositionSuccessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void closeDoor([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("closeDoor", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void closeDoorAsync(string arg0, string arg1) {
            this.closeDoorAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void closeDoorAsync(string arg0, string arg1, object userState) {
            if ((this.closeDoorOperationCompleted == null)) {
                this.closeDoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseDoorOperationCompleted);
            }
            this.InvokeAsync("closeDoor", new object[] {
                        arg0,
                        arg1}, this.closeDoorOperationCompleted, userState);
        }
        
        private void OncloseDoorOperationCompleted(object arg) {
            if ((this.closeDoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeDoorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadOpenMessage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg4Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg5) {
            this.Invoke("uploadOpenMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg4Specified,
                        arg5});
        }
        
        /// <remarks/>
        public void uploadOpenMessageAsync(string arg0, string arg1, string arg2, string arg3, System.DateTime arg4, bool arg4Specified, int arg5) {
            this.uploadOpenMessageAsync(arg0, arg1, arg2, arg3, arg4, arg4Specified, arg5, null);
        }
        
        /// <remarks/>
        public void uploadOpenMessageAsync(string arg0, string arg1, string arg2, string arg3, System.DateTime arg4, bool arg4Specified, int arg5, object userState) {
            if ((this.uploadOpenMessageOperationCompleted == null)) {
                this.uploadOpenMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadOpenMessageOperationCompleted);
            }
            this.InvokeAsync("uploadOpenMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg4Specified,
                        arg5}, this.uploadOpenMessageOperationCompleted, userState);
        }
        
        private void OnuploadOpenMessageOperationCompleted(object arg) {
            if ((this.uploadOpenMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadOpenMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user[] getUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUser", new object[] {
                        arg0});
            return ((user[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(string arg0) {
            this.getUserAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUserAsync(string arg0, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        arg0}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSynInfoSuccess([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setSynInfoSuccess", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setSynInfoSuccessAsync(string arg0) {
            this.setSynInfoSuccessAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setSynInfoSuccessAsync(string arg0, object userState) {
            if ((this.setSynInfoSuccessOperationCompleted == null)) {
                this.setSynInfoSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSynInfoSuccessOperationCompleted);
            }
            this.InvokeAsync("setSynInfoSuccess", new object[] {
                        arg0}, this.setSynInfoSuccessOperationCompleted, userState);
        }
        
        private void OnsetSynInfoSuccessOperationCompleted(object arg) {
            if ((this.setSynInfoSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSynInfoSuccessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunarkGroupGunBullet[] getGunarkGroupGunBullet([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkGroupGunBullet", new object[] {
                        arg0});
            return ((gunarkGroupGunBullet[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkGroupGunBulletAsync(string arg0) {
            this.getGunarkGroupGunBulletAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkGroupGunBulletAsync(string arg0, object userState) {
            if ((this.getGunarkGroupGunBulletOperationCompleted == null)) {
                this.getGunarkGroupGunBulletOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkGroupGunBulletOperationCompleted);
            }
            this.InvokeAsync("getGunarkGroupGunBullet", new object[] {
                        arg0}, this.getGunarkGroupGunBulletOperationCompleted, userState);
        }
        
        private void OngetGunarkGroupGunBulletOperationCompleted(object arg) {
            if ((this.getGunarkGroupGunBulletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkGroupGunBulletCompleted(this, new getGunarkGroupGunBulletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeScrap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeScrap", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeScrapAsync(string arg0) {
            this.setGunBeScrapAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeScrapAsync(string arg0, object userState) {
            if ((this.setGunBeScrapOperationCompleted == null)) {
                this.setGunBeScrapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeScrapOperationCompleted);
            }
            this.InvokeAsync("setGunBeScrap", new object[] {
                        arg0}, this.setGunBeScrapOperationCompleted, userState);
        }
        
        private void OnsetGunBeScrapOperationCompleted(object arg) {
            if ((this.setGunBeScrapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeScrapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunPositionSeal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunPositionSeal", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunPositionSealAsync(string arg0, string arg1, string arg2) {
            this.setGunPositionSealAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunPositionSealAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunPositionSealOperationCompleted == null)) {
                this.setGunPositionSealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunPositionSealOperationCompleted);
            }
            this.InvokeAsync("setGunPositionSeal", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunPositionSealOperationCompleted, userState);
        }
        
        private void OnsetGunPositionSealOperationCompleted(object arg) {
            if ((this.setGunPositionSealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunPositionSealCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeSeal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeSeal", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeSealAsync(string arg0) {
            this.setGunBeSealAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeSealAsync(string arg0, object userState) {
            if ((this.setGunBeSealOperationCompleted == null)) {
                this.setGunBeSealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeSealOperationCompleted);
            }
            this.InvokeAsync("setGunBeSeal", new object[] {
                        arg0}, this.setGunBeSealOperationCompleted, userState);
        }
        
        private void OnsetGunBeSealOperationCompleted(object arg) {
            if ((this.setGunBeSealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeSealCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunLuggage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setgunLuggage", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setgunLuggageAsync(string arg0) {
            this.setgunLuggageAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setgunLuggageAsync(string arg0, object userState) {
            if ((this.setgunLuggageOperationCompleted == null)) {
                this.setgunLuggageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunLuggageOperationCompleted);
            }
            this.InvokeAsync("setgunLuggage", new object[] {
                        arg0}, this.setgunLuggageOperationCompleted, userState);
        }
        
        private void OnsetgunLuggageOperationCompleted(object arg) {
            if ((this.setgunLuggageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunLuggageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUrgentMission([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] taskInfo arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            this.Invoke("setUrgentMission", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setUrgentMissionAsync(taskInfo arg0, string arg1, string arg2, string arg3) {
            this.setUrgentMissionAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setUrgentMissionAsync(taskInfo arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.setUrgentMissionOperationCompleted == null)) {
                this.setUrgentMissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentMissionOperationCompleted);
            }
            this.InvokeAsync("setUrgentMission", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setUrgentMissionOperationCompleted, userState);
        }
        
        private void OnsetUrgentMissionOperationCompleted(object arg) {
            if ((this.setUrgentMissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentMissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserPrivilege([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUserPrivilege", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPrivilegeAsync(string arg0) {
            this.getUserPrivilegeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUserPrivilegeAsync(string arg0, object userState) {
            if ((this.getUserPrivilegeOperationCompleted == null)) {
                this.getUserPrivilegeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPrivilegeOperationCompleted);
            }
            this.InvokeAsync("getUserPrivilege", new object[] {
                        arg0}, this.getUserPrivilegeOperationCompleted, userState);
        }
        
        private void OngetUserPrivilegeOperationCompleted(object arg) {
            if ((this.getUserPrivilegeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPrivilegeCompleted(this, new getUserPrivilegeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getBulletTaskState([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getBulletTaskState", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBulletTaskStateAsync(string arg0) {
            this.getBulletTaskStateAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getBulletTaskStateAsync(string arg0, object userState) {
            if ((this.getBulletTaskStateOperationCompleted == null)) {
                this.getBulletTaskStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBulletTaskStateOperationCompleted);
            }
            this.InvokeAsync("getBulletTaskState", new object[] {
                        arg0}, this.getBulletTaskStateOperationCompleted, userState);
        }
        
        private void OngetBulletTaskStateOperationCompleted(object arg) {
            if ((this.getBulletTaskStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBulletTaskStateCompleted(this, new getBulletTaskStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] setUrgentBulletTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute("arg4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg6Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg8) {
            object[] results = this.Invoke("setUrgentBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg6Specified,
                        arg7,
                        arg8});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void setUrgentBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, int[] arg4, string arg5, System.DateTime arg6, bool arg6Specified, string arg7, string arg8) {
            this.setUrgentBulletTaskAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg6Specified, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void setUrgentBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, int[] arg4, string arg5, System.DateTime arg6, bool arg6Specified, string arg7, string arg8, object userState) {
            if ((this.setUrgentBulletTaskOperationCompleted == null)) {
                this.setUrgentBulletTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentBulletTaskOperationCompleted);
            }
            this.InvokeAsync("setUrgentBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg6Specified,
                        arg7,
                        arg8}, this.setUrgentBulletTaskOperationCompleted, userState);
        }
        
        private void OnsetUrgentBulletTaskOperationCompleted(object arg) {
            if ((this.setUrgentBulletTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentBulletTaskCompleted(this, new setUrgentBulletTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user getUserByUserID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUserByUserID", new object[] {
                        arg0});
            return ((user)(results[0]));
        }
        
        /// <remarks/>
        public void getUserByUserIDAsync(string arg0) {
            this.getUserByUserIDAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUserByUserIDAsync(string arg0, object userState) {
            if ((this.getUserByUserIDOperationCompleted == null)) {
                this.getUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("getUserByUserID", new object[] {
                        arg0}, this.getUserByUserIDOperationCompleted, userState);
        }
        
        private void OngetUserByUserIDOperationCompleted(object arg) {
            if ((this.getUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserByUserIDCompleted(this, new getUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reviewCancelTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("reviewCancelTask", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reviewCancelTaskAsync(string arg0, string arg1, string arg2) {
            this.reviewCancelTaskAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void reviewCancelTaskAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.reviewCancelTaskOperationCompleted == null)) {
                this.reviewCancelTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreviewCancelTaskOperationCompleted);
            }
            this.InvokeAsync("reviewCancelTask", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.reviewCancelTaskOperationCompleted, userState);
        }
        
        private void OnreviewCancelTaskOperationCompleted(object arg) {
            if ((this.reviewCancelTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reviewCancelTaskCompleted(this, new reviewCancelTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOnline([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("setOnline", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setOnlineAsync(string arg0, string arg1) {
            this.setOnlineAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setOnlineAsync(string arg0, string arg1, object userState) {
            if ((this.setOnlineOperationCompleted == null)) {
                this.setOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOnlineOperationCompleted);
            }
            this.InvokeAsync("setOnline", new object[] {
                        arg0,
                        arg1}, this.setOnlineOperationCompleted, userState);
        }
        
        private void OnsetOnlineOperationCompleted(object arg) {
            if ((this.setOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOnlineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateTaskStatusById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg1) {
            this.Invoke("updateTaskStatusById", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void updateTaskStatusByIdAsync(string arg0, int arg1) {
            this.updateTaskStatusByIdAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void updateTaskStatusByIdAsync(string arg0, int arg1, object userState) {
            if ((this.updateTaskStatusByIdOperationCompleted == null)) {
                this.updateTaskStatusByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskStatusByIdOperationCompleted);
            }
            this.InvokeAsync("updateTaskStatusById", new object[] {
                        arg0,
                        arg1}, this.updateTaskStatusByIdOperationCompleted, userState);
        }
        
        private void OnupdateTaskStatusByIdOperationCompleted(object arg) {
            if ((this.updateTaskStatusByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTaskStatusByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reviewTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("reviewTask", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reviewTaskAsync(string arg0, string arg1, string arg2) {
            this.reviewTaskAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void reviewTaskAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.reviewTaskOperationCompleted == null)) {
                this.reviewTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreviewTaskOperationCompleted);
            }
            this.InvokeAsync("reviewTask", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.reviewTaskOperationCompleted, userState);
        }
        
        private void OnreviewTaskOperationCompleted(object arg) {
            if ((this.reviewTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reviewTaskCompleted(this, new reviewTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArkAdmin[] getOnDuty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getOnDuty", new object[] {
                        arg0});
            return ((gunArkAdmin[])(results[0]));
        }
        
        /// <remarks/>
        public void getOnDutyAsync(string arg0) {
            this.getOnDutyAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getOnDutyAsync(string arg0, object userState) {
            if ((this.getOnDutyOperationCompleted == null)) {
                this.getOnDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnDutyOperationCompleted);
            }
            this.InvokeAsync("getOnDuty", new object[] {
                        arg0}, this.getOnDutyOperationCompleted, userState);
        }
        
        private void OngetOnDutyOperationCompleted(object arg) {
            if ((this.getOnDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOnDutyCompleted(this, new getOnDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunOnPosition([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunOnPositionAsync(string arg0, string arg1, string arg2) {
            this.setGunOnPositionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunOnPositionAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunOnPositionOperationCompleted == null)) {
                this.setGunOnPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunOnPositionOperationCompleted);
            }
            this.InvokeAsync("setGunOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunOnPositionOperationCompleted, userState);
        }
        
        private void OnsetGunOnPositionOperationCompleted(object arg) {
            if ((this.setGunOnPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunOnPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunInUse([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setgunInUse", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setgunInUseAsync(string arg0) {
            this.setgunInUseAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setgunInUseAsync(string arg0, object userState) {
            if ((this.setgunInUseOperationCompleted == null)) {
                this.setgunInUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunInUseOperationCompleted);
            }
            this.InvokeAsync("setgunInUse", new object[] {
                        arg0}, this.setgunInUseOperationCompleted, userState);
        }
        
        private void OnsetgunInUseOperationCompleted(object arg) {
            if ((this.setgunInUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunInUseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fingerUser[] getFingerUserInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getFingerUserInfo", new object[] {
                        arg0,
                        arg1});
            return ((fingerUser[])(results[0]));
        }
        
        /// <remarks/>
        public void getFingerUserInfoAsync(string arg0, string arg1) {
            this.getFingerUserInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getFingerUserInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getFingerUserInfoOperationCompleted == null)) {
                this.getFingerUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFingerUserInfoOperationCompleted);
            }
            this.InvokeAsync("getFingerUserInfo", new object[] {
                        arg0,
                        arg1}, this.getFingerUserInfoOperationCompleted, userState);
        }
        
        private void OngetFingerUserInfoOperationCompleted(object arg) {
            if ((this.getFingerUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFingerUserInfoCompleted(this, new getFingerUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUrgentGunBulletTaskNew([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute("arg5", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg5, [System.Xml.Serialization.XmlElementAttribute("arg6", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg6, [System.Xml.Serialization.XmlElementAttribute("arg7", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg7, [System.Xml.Serialization.XmlElementAttribute("arg8", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg8, [System.Xml.Serialization.XmlElementAttribute("arg9", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] arg9, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg10, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg11, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg11Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg12, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg13) {
            this.Invoke("setUrgentGunBulletTaskNew", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg9,
                        arg10,
                        arg11,
                        arg11Specified,
                        arg12,
                        arg13});
        }
        
        /// <remarks/>
        public void setUrgentGunBulletTaskNewAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string[] arg5, string[] arg6, string[] arg7, string[] arg8, int[] arg9, string arg10, System.DateTime arg11, bool arg11Specified, string arg12, string arg13) {
            this.setUrgentGunBulletTaskNewAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg11Specified, arg12, arg13, null);
        }
        
        /// <remarks/>
        public void setUrgentGunBulletTaskNewAsync(
                    string arg0, 
                    string arg1, 
                    string arg2, 
                    string arg3, 
                    string arg4, 
                    string[] arg5, 
                    string[] arg6, 
                    string[] arg7, 
                    string[] arg8, 
                    int[] arg9, 
                    string arg10, 
                    System.DateTime arg11, 
                    bool arg11Specified, 
                    string arg12, 
                    string arg13, 
                    object userState) {
            if ((this.setUrgentGunBulletTaskNewOperationCompleted == null)) {
                this.setUrgentGunBulletTaskNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentGunBulletTaskNewOperationCompleted);
            }
            this.InvokeAsync("setUrgentGunBulletTaskNew", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg9,
                        arg10,
                        arg11,
                        arg11Specified,
                        arg12,
                        arg13}, this.setUrgentGunBulletTaskNewOperationCompleted, userState);
        }
        
        private void OnsetUrgentGunBulletTaskNewOperationCompleted(object arg) {
            if ((this.setUrgentGunBulletTaskNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentGunBulletTaskNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunNotOnPosition([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("setGunNotOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setGunNotOnPositionAsync(string arg0, string arg1, string arg2) {
            this.setGunNotOnPositionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunNotOnPositionAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunNotOnPositionOperationCompleted == null)) {
                this.setGunNotOnPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunNotOnPositionOperationCompleted);
            }
            this.InvokeAsync("setGunNotOnPosition", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunNotOnPositionOperationCompleted, userState);
        }
        
        private void OnsetGunNotOnPositionOperationCompleted(object arg) {
            if ((this.setGunNotOnPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunNotOnPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserInfoDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUserInfoDetail", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoDetailAsync(string arg0) {
            this.getUserInfoDetailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUserInfoDetailAsync(string arg0, object userState) {
            if ((this.getUserInfoDetailOperationCompleted == null)) {
                this.getUserInfoDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoDetailOperationCompleted);
            }
            this.InvokeAsync("getUserInfoDetail", new object[] {
                        arg0}, this.getUserInfoDetailOperationCompleted, userState);
        }
        
        private void OngetUserInfoDetailOperationCompleted(object arg) {
            if ((this.getUserInfoDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoDetailCompleted(this, new getUserInfoDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDoingTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            this.Invoke("setDoingTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDoingTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3) {
            this.setDoingTaskAsync(arg0, arg1, arg1Specified, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDoingTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3, object userState) {
            if ((this.setDoingTaskOperationCompleted == null)) {
                this.setDoingTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDoingTaskOperationCompleted);
            }
            this.InvokeAsync("setDoingTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3}, this.setDoingTaskOperationCompleted, userState);
        }
        
        private void OnsetDoingTaskOperationCompleted(object arg) {
            if ((this.setDoingTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDoingTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunInfo[] getGunInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getGunInfo", new object[] {
                        arg0,
                        arg1});
            return ((gunInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunInfoAsync(string arg0, string arg1) {
            this.getGunInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGunInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getGunInfoOperationCompleted == null)) {
                this.getGunInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunInfoOperationCompleted);
            }
            this.InvokeAsync("getGunInfo", new object[] {
                        arg0,
                        arg1}, this.getGunInfoOperationCompleted, userState);
        }
        
        private void OngetGunInfoOperationCompleted(object arg) {
            if ((this.getGunInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunInfoCompleted(this, new getGunInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setMagazineInfoCheck([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setMagazineInfoCheck", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setMagazineInfoCheckAsync(string arg0) {
            this.setMagazineInfoCheckAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setMagazineInfoCheckAsync(string arg0, object userState) {
            if ((this.setMagazineInfoCheckOperationCompleted == null)) {
                this.setMagazineInfoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMagazineInfoCheckOperationCompleted);
            }
            this.InvokeAsync("setMagazineInfoCheck", new object[] {
                        arg0}, this.setMagazineInfoCheckOperationCompleted, userState);
        }
        
        private void OnsetMagazineInfoCheckOperationCompleted(object arg) {
            if ((this.setMagazineInfoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMagazineInfoCheckCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setGunarkTaskPass([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg8) {
            object[] results = this.Invoke("setGunarkTaskPass", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setGunarkTaskPassAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, string arg6, string arg7, string arg8) {
            this.setGunarkTaskPassAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void setGunarkTaskPassAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, string arg6, string arg7, string arg8, object userState) {
            if ((this.setGunarkTaskPassOperationCompleted == null)) {
                this.setGunarkTaskPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunarkTaskPassOperationCompleted);
            }
            this.InvokeAsync("setGunarkTaskPass", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8}, this.setGunarkTaskPassOperationCompleted, userState);
        }
        
        private void OnsetGunarkTaskPassOperationCompleted(object arg) {
            if ((this.setGunarkTaskPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunarkTaskPassCompleted(this, new setGunarkTaskPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyBulletDetailInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyBulletDetailInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyBulletDetailInfoAsync(string arg0) {
            this.getApplyBulletDetailInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyBulletDetailInfoAsync(string arg0, object userState) {
            if ((this.getApplyBulletDetailInfoOperationCompleted == null)) {
                this.getApplyBulletDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyBulletDetailInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyBulletDetailInfo", new object[] {
                        arg0}, this.getApplyBulletDetailInfoOperationCompleted, userState);
        }
        
        private void OngetApplyBulletDetailInfoOperationCompleted(object arg) {
            if ((this.getApplyBulletDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyBulletDetailInfoCompleted(this, new getApplyBulletDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rejectCancelTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("rejectCancelTask", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rejectCancelTaskAsync(string arg0, string arg1, string arg2) {
            this.rejectCancelTaskAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void rejectCancelTaskAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.rejectCancelTaskOperationCompleted == null)) {
                this.rejectCancelTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrejectCancelTaskOperationCompleted);
            }
            this.InvokeAsync("rejectCancelTask", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.rejectCancelTaskOperationCompleted, userState);
        }
        
        private void OnrejectCancelTaskOperationCompleted(object arg) {
            if ((this.rejectCancelTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rejectCancelTaskCompleted(this, new rejectCancelTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunarkMessageCode[] getGunarkMessageCode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkMessageCode", new object[] {
                        arg0});
            return ((gunarkMessageCode[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkMessageCodeAsync(string arg0) {
            this.getGunarkMessageCodeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkMessageCodeAsync(string arg0, object userState) {
            if ((this.getGunarkMessageCodeOperationCompleted == null)) {
                this.getGunarkMessageCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkMessageCodeOperationCompleted);
            }
            this.InvokeAsync("getGunarkMessageCode", new object[] {
                        arg0}, this.getGunarkMessageCodeOperationCompleted, userState);
        }
        
        private void OngetGunarkMessageCodeOperationCompleted(object arg) {
            if ((this.getGunarkMessageCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkMessageCodeCompleted(this, new getGunarkMessageCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelAlarm([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg3Specified) {
            this.Invoke("cancelAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified});
        }
        
        /// <remarks/>
        public void cancelAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified) {
            this.cancelAlarmAsync(arg0, arg1, arg2, arg3, arg3Specified, null);
        }
        
        /// <remarks/>
        public void cancelAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, object userState) {
            if ((this.cancelAlarmOperationCompleted == null)) {
                this.cancelAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelAlarmOperationCompleted);
            }
            this.InvokeAsync("cancelAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified}, this.cancelAlarmOperationCompleted, userState);
        }
        
        private void OncancelAlarmOperationCompleted(object arg) {
            if ((this.cancelAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelAlarmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAlarmRecord([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getAlarmRecord", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAlarmRecordAsync(string arg0) {
            this.getAlarmRecordAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getAlarmRecordAsync(string arg0, object userState) {
            if ((this.getAlarmRecordOperationCompleted == null)) {
                this.getAlarmRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlarmRecordOperationCompleted);
            }
            this.InvokeAsync("getAlarmRecord", new object[] {
                        arg0}, this.getAlarmRecordOperationCompleted, userState);
        }
        
        private void OngetAlarmRecordOperationCompleted(object arg) {
            if ((this.getAlarmRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAlarmRecordCompleted(this, new getAlarmRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunarkcheckingSuccess([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("setgunarkcheckingSuccess", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setgunarkcheckingSuccessAsync(string arg0, string arg1) {
            this.setgunarkcheckingSuccessAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setgunarkcheckingSuccessAsync(string arg0, string arg1, object userState) {
            if ((this.setgunarkcheckingSuccessOperationCompleted == null)) {
                this.setgunarkcheckingSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunarkcheckingSuccessOperationCompleted);
            }
            this.InvokeAsync("setgunarkcheckingSuccess", new object[] {
                        arg0,
                        arg1}, this.setgunarkcheckingSuccessOperationCompleted, userState);
        }
        
        private void OnsetgunarkcheckingSuccessOperationCompleted(object arg) {
            if ((this.setgunarkcheckingSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunarkcheckingSuccessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public synInfo[] getSynInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getSynInfo", new object[] {
                        arg0});
            return ((synInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSynInfoAsync(string arg0) {
            this.getSynInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getSynInfoAsync(string arg0, object userState) {
            if ((this.getSynInfoOperationCompleted == null)) {
                this.getSynInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSynInfoOperationCompleted);
            }
            this.InvokeAsync("getSynInfo", new object[] {
                        arg0}, this.getSynInfoOperationCompleted, userState);
        }
        
        private void OngetSynInfoOperationCompleted(object arg) {
            if ((this.getSynInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSynInfoCompleted(this, new getSynInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTurn([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            this.Invoke("setTurn", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setTurnAsync(string arg0, string arg1, int arg2) {
            this.setTurnAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setTurnAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.setTurnOperationCompleted == null)) {
                this.setTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTurnOperationCompleted);
            }
            this.InvokeAsync("setTurn", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setTurnOperationCompleted, userState);
        }
        
        private void OnsetTurnOperationCompleted(object arg) {
            if ((this.setTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTurnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunpositionLuggage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setgunpositionLuggage", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setgunpositionLuggageAsync(string arg0) {
            this.setgunpositionLuggageAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setgunpositionLuggageAsync(string arg0, object userState) {
            if ((this.setgunpositionLuggageOperationCompleted == null)) {
                this.setgunpositionLuggageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunpositionLuggageOperationCompleted);
            }
            this.InvokeAsync("setgunpositionLuggage", new object[] {
                        arg0}, this.setgunpositionLuggageOperationCompleted, userState);
        }
        
        private void OnsetgunpositionLuggageOperationCompleted(object arg) {
            if ((this.setgunpositionLuggageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunpositionLuggageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setgunpositionUnLuggage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setgunpositionUnLuggage", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setgunpositionUnLuggageAsync(string arg0) {
            this.setgunpositionUnLuggageAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setgunpositionUnLuggageAsync(string arg0, object userState) {
            if ((this.setgunpositionUnLuggageOperationCompleted == null)) {
                this.setgunpositionUnLuggageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetgunpositionUnLuggageOperationCompleted);
            }
            this.InvokeAsync("setgunpositionUnLuggage", new object[] {
                        arg0}, this.setgunpositionUnLuggageOperationCompleted, userState);
        }
        
        private void OnsetgunpositionUnLuggageOperationCompleted(object arg) {
            if ((this.setgunpositionUnLuggageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setgunpositionUnLuggageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserIfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getUserIfo", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserIfoAsync(string arg0, string arg1) {
            this.getUserIfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getUserIfoAsync(string arg0, string arg1, object userState) {
            if ((this.getUserIfoOperationCompleted == null)) {
                this.getUserIfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserIfoOperationCompleted);
            }
            this.InvokeAsync("getUserIfo", new object[] {
                        arg0,
                        arg1}, this.getUserIfoOperationCompleted, userState);
        }
        
        private void OngetUserIfoOperationCompleted(object arg) {
            if ((this.getUserIfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserIfoCompleted(this, new getUserIfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFinishTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            this.Invoke("setFinishTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setFinishTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3) {
            this.setFinishTaskAsync(arg0, arg1, arg1Specified, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setFinishTaskAsync(string arg0, System.DateTime arg1, bool arg1Specified, string arg2, string arg3, object userState) {
            if ((this.setFinishTaskOperationCompleted == null)) {
                this.setFinishTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFinishTaskOperationCompleted);
            }
            this.InvokeAsync("setFinishTask", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg3}, this.setFinishTaskOperationCompleted, userState);
        }
        
        private void OnsetFinishTaskOperationCompleted(object arg) {
            if ((this.setFinishTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFinishTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunInStore([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunInStore", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunInStoreAsync(string arg0) {
            this.setGunInStoreAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunInStoreAsync(string arg0, object userState) {
            if ((this.setGunInStoreOperationCompleted == null)) {
                this.setGunInStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunInStoreOperationCompleted);
            }
            this.InvokeAsync("setGunInStore", new object[] {
                        arg0}, this.setGunInStoreOperationCompleted, userState);
        }
        
        private void OnsetGunInStoreOperationCompleted(object arg) {
            if ((this.setGunInStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunInStoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo getUnitInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getUnitInfo", new object[] {
                        arg0});
            return ((unitInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUnitInfoAsync(string arg0) {
            this.getUnitInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getUnitInfoAsync(string arg0, object userState) {
            if ((this.getUnitInfoOperationCompleted == null)) {
                this.getUnitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitInfoOperationCompleted);
            }
            this.InvokeAsync("getUnitInfo", new object[] {
                        arg0}, this.getUnitInfoOperationCompleted, userState);
        }
        
        private void OngetUnitInfoOperationCompleted(object arg) {
            if ((this.getUnitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitInfoCompleted(this, new getUnitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getGunarkTaskState([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkTaskState", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkTaskStateAsync(string arg0) {
            this.getGunarkTaskStateAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkTaskStateAsync(string arg0, object userState) {
            if ((this.getGunarkTaskStateOperationCompleted == null)) {
                this.getGunarkTaskStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkTaskStateOperationCompleted);
            }
            this.InvokeAsync("getGunarkTaskState", new object[] {
                        arg0}, this.getGunarkTaskStateOperationCompleted, userState);
        }
        
        private void OngetGunarkTaskStateOperationCompleted(object arg) {
            if ((this.getGunarkTaskStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkTaskStateCompleted(this, new getGunarkTaskStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCautionNum([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getCautionNum", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCautionNumAsync(string arg0) {
            this.getCautionNumAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCautionNumAsync(string arg0, object userState) {
            if ((this.getCautionNumOperationCompleted == null)) {
                this.getCautionNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCautionNumOperationCompleted);
            }
            this.InvokeAsync("getCautionNum", new object[] {
                        arg0}, this.getCautionNumOperationCompleted, userState);
        }
        
        private void OngetCautionNumOperationCompleted(object arg) {
            if ((this.getCautionNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCautionNumCompleted(this, new getCautionNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public magazineInfo[] getMagazineInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getMagazineInfo", new object[] {
                        arg0,
                        arg1});
            return ((magazineInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getMagazineInfoAsync(string arg0, string arg1) {
            this.getMagazineInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMagazineInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getMagazineInfoOperationCompleted == null)) {
                this.getMagazineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMagazineInfoOperationCompleted);
            }
            this.InvokeAsync("getMagazineInfo", new object[] {
                        arg0,
                        arg1}, this.getMagazineInfoOperationCompleted, userState);
        }
        
        private void OngetMagazineInfoOperationCompleted(object arg) {
            if ((this.getMagazineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMagazineInfoCompleted(this, new getMagazineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk getGunarkInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkInfo", new object[] {
                        arg0});
            return ((gunArk)(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkInfoAsync(string arg0) {
            this.getGunarkInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkInfoAsync(string arg0, object userState) {
            if ((this.getGunarkInfoOperationCompleted == null)) {
                this.getGunarkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkInfoOperationCompleted);
            }
            this.InvokeAsync("getGunarkInfo", new object[] {
                        arg0}, this.getGunarkInfoOperationCompleted, userState);
        }
        
        private void OngetGunarkInfoOperationCompleted(object arg) {
            if ((this.getGunarkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkInfoCompleted(this, new getGunarkInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] setUrgentGunTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg5Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7) {
            object[] results = this.Invoke("setUrgentGunTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg5Specified,
                        arg6,
                        arg7});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void setUrgentGunTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string arg4, System.DateTime arg5, bool arg5Specified, string arg6, string arg7) {
            this.setUrgentGunTaskAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg5Specified, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void setUrgentGunTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string arg4, System.DateTime arg5, bool arg5Specified, string arg6, string arg7, object userState) {
            if ((this.setUrgentGunTaskOperationCompleted == null)) {
                this.setUrgentGunTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentGunTaskOperationCompleted);
            }
            this.InvokeAsync("setUrgentGunTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg5Specified,
                        arg6,
                        arg7}, this.setUrgentGunTaskOperationCompleted, userState);
        }
        
        private void OnsetUrgentGunTaskOperationCompleted(object arg) {
            if ((this.setUrgentGunTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentGunTaskCompleted(this, new setUrgentGunTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setMaintainconfig([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setMaintainconfig", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setMaintainconfigAsync(string arg0) {
            this.setMaintainconfigAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setMaintainconfigAsync(string arg0, object userState) {
            if ((this.setMaintainconfigOperationCompleted == null)) {
                this.setMaintainconfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMaintainconfigOperationCompleted);
            }
            this.InvokeAsync("setMaintainconfig", new object[] {
                        arg0}, this.setMaintainconfigOperationCompleted, userState);
        }
        
        private void OnsetMaintainconfigOperationCompleted(object arg) {
            if ((this.setMaintainconfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMaintainconfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk[] getGunarkList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getGunarkList", new object[] {
                        arg0});
            return ((gunArk[])(results[0]));
        }
        
        /// <remarks/>
        public void getGunarkListAsync(string arg0) {
            this.getGunarkListAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getGunarkListAsync(string arg0, object userState) {
            if ((this.getGunarkListOperationCompleted == null)) {
                this.getGunarkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGunarkListOperationCompleted);
            }
            this.InvokeAsync("getGunarkList", new object[] {
                        arg0}, this.getGunarkListOperationCompleted, userState);
        }
        
        private void OngetGunarkListOperationCompleted(object arg) {
            if ((this.getGunarkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGunarkListCompleted(this, new getGunarkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyMagazineDetailInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyMagazineDetailInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyMagazineDetailInfoAsync(string arg0) {
            this.getApplyMagazineDetailInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyMagazineDetailInfoAsync(string arg0, object userState) {
            if ((this.getApplyMagazineDetailInfoOperationCompleted == null)) {
                this.getApplyMagazineDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyMagazineDetailInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyMagazineDetailInfo", new object[] {
                        arg0}, this.getApplyMagazineDetailInfoOperationCompleted, userState);
        }
        
        private void OngetApplyMagazineDetailInfoOperationCompleted(object arg) {
            if ((this.getApplyMagazineDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyMagazineDetailInfoCompleted(this, new getApplyMagazineDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyBulletGunDetailInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyBulletGunDetailInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyBulletGunDetailInfoAsync(string arg0) {
            this.getApplyBulletGunDetailInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyBulletGunDetailInfoAsync(string arg0, object userState) {
            if ((this.getApplyBulletGunDetailInfoOperationCompleted == null)) {
                this.getApplyBulletGunDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyBulletGunDetailInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyBulletGunDetailInfo", new object[] {
                        arg0}, this.getApplyBulletGunDetailInfoOperationCompleted, userState);
        }
        
        private void OngetApplyBulletGunDetailInfoOperationCompleted(object arg) {
            if ((this.getApplyBulletGunDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyBulletGunDetailInfoCompleted(this, new getApplyBulletGunDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] setUrgentGunBulletTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute("arg4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg4, [System.Xml.Serialization.XmlElementAttribute("arg5", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg5, [System.Xml.Serialization.XmlElementAttribute("arg6", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg8, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg8Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg9, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg10) {
            object[] results = this.Invoke("setUrgentGunBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg8Specified,
                        arg9,
                        arg10});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void setUrgentGunBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string[] arg4, string[] arg5, int[] arg6, string arg7, System.DateTime arg8, bool arg8Specified, string arg9, string arg10) {
            this.setUrgentGunBulletTaskAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg8Specified, arg9, arg10, null);
        }
        
        /// <remarks/>
        public void setUrgentGunBulletTaskAsync(string arg0, string arg1, string[] arg2, string[] arg3, string[] arg4, string[] arg5, int[] arg6, string arg7, System.DateTime arg8, bool arg8Specified, string arg9, string arg10, object userState) {
            if ((this.setUrgentGunBulletTaskOperationCompleted == null)) {
                this.setUrgentGunBulletTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUrgentGunBulletTaskOperationCompleted);
            }
            this.InvokeAsync("setUrgentGunBulletTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg8Specified,
                        arg9,
                        arg10}, this.setUrgentGunBulletTaskOperationCompleted, userState);
        }
        
        private void OnsetUrgentGunBulletTaskOperationCompleted(object arg) {
            if ((this.setUrgentGunBulletTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUrgentGunBulletTaskCompleted(this, new setUrgentGunBulletTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOffline([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("setOffline", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setOfflineAsync(string arg0, string arg1) {
            this.setOfflineAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setOfflineAsync(string arg0, string arg1, object userState) {
            if ((this.setOfflineOperationCompleted == null)) {
                this.setOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOfflineOperationCompleted);
            }
            this.InvokeAsync("setOffline", new object[] {
                        arg0,
                        arg1}, this.setOfflineOperationCompleted, userState);
        }
        
        private void OnsetOfflineOperationCompleted(object arg) {
            if ((this.setOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOfflineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTemperature([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2) {
            this.Invoke("setTemperature", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setTemperatureAsync(string arg0, string arg1, int arg2) {
            this.setTemperatureAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setTemperatureAsync(string arg0, string arg1, int arg2, object userState) {
            if ((this.setTemperatureOperationCompleted == null)) {
                this.setTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTemperatureOperationCompleted);
            }
            this.InvokeAsync("setTemperature", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setTemperatureOperationCompleted, userState);
        }
        
        private void OnsetTemperatureOperationCompleted(object arg) {
            if ((this.setTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTemperatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rejectTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("rejectTask", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string arg0, string arg1, string arg2) {
            this.rejectTaskAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.rejectTaskOperationCompleted == null)) {
                this.rejectTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrejectTaskOperationCompleted);
            }
            this.InvokeAsync("rejectTask", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.rejectTaskOperationCompleted, userState);
        }
        
        private void OnrejectTaskOperationCompleted(object arg) {
            if ((this.rejectTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rejectTaskCompleted(this, new rejectTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGunBeAllot([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("setGunBeAllot", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void setGunBeAllotAsync(string arg0) {
            this.setGunBeAllotAsync(arg0, null);
        }
        
        /// <remarks/>
        public void setGunBeAllotAsync(string arg0, object userState) {
            if ((this.setGunBeAllotOperationCompleted == null)) {
                this.setGunBeAllotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunBeAllotOperationCompleted);
            }
            this.InvokeAsync("setGunBeAllot", new object[] {
                        arg0}, this.setGunBeAllotOperationCompleted, userState);
        }
        
        private void OnsetGunBeAllotOperationCompleted(object arg) {
            if ((this.setGunBeAllotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunBeAllotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setAlarm([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg3Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("setAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, string arg4) {
            this.setAlarmAsync(arg0, arg1, arg2, arg3, arg3Specified, arg4, null);
        }
        
        /// <remarks/>
        public void setAlarmAsync(string arg0, string arg1, string arg2, System.DateTime arg3, bool arg3Specified, string arg4, object userState) {
            if ((this.setAlarmOperationCompleted == null)) {
                this.setAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAlarmOperationCompleted);
            }
            this.InvokeAsync("setAlarm", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg3Specified,
                        arg4}, this.setAlarmOperationCompleted, userState);
        }
        
        private void OnsetAlarmOperationCompleted(object arg) {
            if ((this.setAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAlarmCompleted(this, new setAlarmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFingerUserInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] byte[] arg6) {
            this.Invoke("setFingerUserInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void setFingerUserInfoAsync(string arg0, string arg1, string arg2, string arg3, int arg4, string arg5, byte[] arg6) {
            this.setFingerUserInfoAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void setFingerUserInfoAsync(string arg0, string arg1, string arg2, string arg3, int arg4, string arg5, byte[] arg6, object userState) {
            if ((this.setFingerUserInfoOperationCompleted == null)) {
                this.setFingerUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFingerUserInfoOperationCompleted);
            }
            this.InvokeAsync("setFingerUserInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.setFingerUserInfoOperationCompleted, userState);
        }
        
        private void OnsetFingerUserInfoOperationCompleted(object arg) {
            if ((this.setFingerUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFingerUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSynGunarkInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            this.Invoke("getSynGunarkInfo", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void getSynGunarkInfoAsync(string arg0) {
            this.getSynGunarkInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getSynGunarkInfoAsync(string arg0, object userState) {
            if ((this.getSynGunarkInfoOperationCompleted == null)) {
                this.getSynGunarkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSynGunarkInfoOperationCompleted);
            }
            this.InvokeAsync("getSynGunarkInfo", new object[] {
                        arg0}, this.getSynGunarkInfoOperationCompleted, userState);
        }
        
        private void OngetSynGunarkInfoOperationCompleted(object arg) {
            if ((this.getSynGunarkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSynGunarkInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyGunarkDetailInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyGunarkDetailInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyGunarkDetailInfoAsync(string arg0) {
            this.getApplyGunarkDetailInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyGunarkDetailInfoAsync(string arg0, object userState) {
            if ((this.getApplyGunarkDetailInfoOperationCompleted == null)) {
                this.getApplyGunarkDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyGunarkDetailInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyGunarkDetailInfo", new object[] {
                        arg0}, this.getApplyGunarkDetailInfoOperationCompleted, userState);
        }
        
        private void OngetApplyGunarkDetailInfoOperationCompleted(object arg) {
            if ((this.getApplyGunarkDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyGunarkDetailInfoCompleted(this, new getApplyGunarkDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setGunarkDeleteTaskPass([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("setGunarkDeleteTaskPass", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setGunarkDeleteTaskPassAsync(string arg0, string arg1, string arg2) {
            this.setGunarkDeleteTaskPassAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setGunarkDeleteTaskPassAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setGunarkDeleteTaskPassOperationCompleted == null)) {
                this.setGunarkDeleteTaskPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGunarkDeleteTaskPassOperationCompleted);
            }
            this.InvokeAsync("setGunarkDeleteTaskPass", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setGunarkDeleteTaskPassOperationCompleted, userState);
        }
        
        private void OnsetGunarkDeleteTaskPassOperationCompleted(object arg) {
            if ((this.setGunarkDeleteTaskPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGunarkDeleteTaskPassCompleted(this, new setGunarkDeleteTaskPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfo[] getTaskInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getTaskInfo", new object[] {
                        arg0,
                        arg1});
            return ((taskInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string arg0, string arg1) {
            this.getTaskInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string arg0, string arg1, object userState) {
            if ((this.getTaskInfoOperationCompleted == null)) {
                this.getTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("getTaskInfo", new object[] {
                        arg0,
                        arg1}, this.getTaskInfoOperationCompleted, userState);
        }
        
        private void OngetTaskInfoOperationCompleted(object arg) {
            if ((this.getTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskInfoCompleted(this, new getTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setRejectAddGunark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("setRejectAddGunark", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setRejectAddGunarkAsync(string arg0, string arg1, string arg2) {
            this.setRejectAddGunarkAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setRejectAddGunarkAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setRejectAddGunarkOperationCompleted == null)) {
                this.setRejectAddGunarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRejectAddGunarkOperationCompleted);
            }
            this.InvokeAsync("setRejectAddGunark", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setRejectAddGunarkOperationCompleted, userState);
        }
        
        private void OnsetRejectAddGunarkOperationCompleted(object arg) {
            if ((this.setRejectAddGunarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRejectAddGunarkCompleted(this, new setRejectAddGunarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reviewModifyTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("reviewModifyTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reviewModifyTaskAsync(string arg0, string arg1, string arg2, string arg3) {
            this.reviewModifyTaskAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void reviewModifyTaskAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.reviewModifyTaskOperationCompleted == null)) {
                this.reviewModifyTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreviewModifyTaskOperationCompleted);
            }
            this.InvokeAsync("reviewModifyTask", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.reviewModifyTaskOperationCompleted, userState);
        }
        
        private void OnreviewModifyTaskOperationCompleted(object arg) {
            if ((this.reviewModifyTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reviewModifyTaskCompleted(this, new reviewModifyTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gunark.bjut.com/", ResponseNamespace="http://webservice.gunark.bjut.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getApplyGunarkInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getApplyGunarkInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyGunarkInfoAsync(string arg0) {
            this.getApplyGunarkInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getApplyGunarkInfoAsync(string arg0, object userState) {
            if ((this.getApplyGunarkInfoOperationCompleted == null)) {
                this.getApplyGunarkInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyGunarkInfoOperationCompleted);
            }
            this.InvokeAsync("getApplyGunarkInfo", new object[] {
                        arg0}, this.getApplyGunarkInfoOperationCompleted, userState);
        }
        
        private void OngetApplyGunarkInfoOperationCompleted(object arg) {
            if ((this.getApplyGunarkInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyGunarkInfoCompleted(this, new getApplyGunarkInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunPositionInfo {
        
        private gunArk gunArkField;
        
        private string gun_Bullet_NameField;
        
        private string gun_Bullet_NumberField;
        
        private string gun_Info_IDField;
        
        private string gun_Position_Info_IdField;
        
        private string gun_Position_NumberField;
        
        private int gun_Position_StatusField;
        
        private int gun_isLuggageField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Name {
            get {
                return this.gun_Bullet_NameField;
            }
            set {
                this.gun_Bullet_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Number {
            get {
                return this.gun_Bullet_NumberField;
            }
            set {
                this.gun_Bullet_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Info_ID {
            get {
                return this.gun_Info_IDField;
            }
            set {
                this.gun_Info_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Position_Info_Id {
            get {
                return this.gun_Position_Info_IdField;
            }
            set {
                this.gun_Position_Info_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Position_Number {
            get {
                return this.gun_Position_NumberField;
            }
            set {
                this.gun_Position_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Position_Status {
            get {
                return this.gun_Position_StatusField;
            }
            set {
                this.gun_Position_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_isLuggage {
            get {
                return this.gun_isLuggageField;
            }
            set {
                this.gun_isLuggageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunArk {
        
        private string alcoholIsField;
        
        private string cameraIpField;
        
        private string codeIsField;
        
        private int emergencyNumberField;
        
        private System.DateTime enterTimeField;
        
        private bool enterTimeFieldSpecified;
        
        private string gggbUniqueIsField;
        
        private string gunarkBigTypeField;
        
        private string gunarkGatewayField;
        
        private string gunarkIdField;
        
        private string gunarkIpField;
        
        private string gunarkIsField;
        
        private string gunarkLocationField;
        
        private string gunarkNameField;
        
        private string gunarkNumberField;
        
        private string gunarkPicUrlField;
        
        private string gunarkPortField;
        
        private string gunarkSizeField;
        
        private int gunarkStatusField;
        
        private string gunarkSubnetField;
        
        private string gunarkTypeField;
        
        private string gunarkVerifyStatusField;
        
        private int isCardReadingField;
        
        private int isCheckingField;
        
        private int isOfflineField;
        
        private bool isOnlineField;
        
        private bool isOpenField;
        
        private bool isPowerOnField;
        
        private bool isSealUpField;
        
        private bool isWarningField;
        
        private string numOfBulletField;
        
        private string numOfBulletWarehouseField;
        
        private string numOfGunField;
        
        private string remarkField;
        
        private unitInfo unitInfoField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string alcoholIs {
            get {
                return this.alcoholIsField;
            }
            set {
                this.alcoholIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cameraIp {
            get {
                return this.cameraIpField;
            }
            set {
                this.cameraIpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string codeIs {
            get {
                return this.codeIsField;
            }
            set {
                this.codeIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int emergencyNumber {
            get {
                return this.emergencyNumberField;
            }
            set {
                this.emergencyNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime enterTime {
            get {
                return this.enterTimeField;
            }
            set {
                this.enterTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enterTimeSpecified {
            get {
                return this.enterTimeFieldSpecified;
            }
            set {
                this.enterTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gggbUniqueIs {
            get {
                return this.gggbUniqueIsField;
            }
            set {
                this.gggbUniqueIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkBigType {
            get {
                return this.gunarkBigTypeField;
            }
            set {
                this.gunarkBigTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkGateway {
            get {
                return this.gunarkGatewayField;
            }
            set {
                this.gunarkGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkId {
            get {
                return this.gunarkIdField;
            }
            set {
                this.gunarkIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkIp {
            get {
                return this.gunarkIpField;
            }
            set {
                this.gunarkIpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkIs {
            get {
                return this.gunarkIsField;
            }
            set {
                this.gunarkIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkLocation {
            get {
                return this.gunarkLocationField;
            }
            set {
                this.gunarkLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkName {
            get {
                return this.gunarkNameField;
            }
            set {
                this.gunarkNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkNumber {
            get {
                return this.gunarkNumberField;
            }
            set {
                this.gunarkNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkPicUrl {
            get {
                return this.gunarkPicUrlField;
            }
            set {
                this.gunarkPicUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkPort {
            get {
                return this.gunarkPortField;
            }
            set {
                this.gunarkPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkSize {
            get {
                return this.gunarkSizeField;
            }
            set {
                this.gunarkSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gunarkStatus {
            get {
                return this.gunarkStatusField;
            }
            set {
                this.gunarkStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkSubnet {
            get {
                return this.gunarkSubnetField;
            }
            set {
                this.gunarkSubnetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkType {
            get {
                return this.gunarkTypeField;
            }
            set {
                this.gunarkTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkVerifyStatus {
            get {
                return this.gunarkVerifyStatusField;
            }
            set {
                this.gunarkVerifyStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int isCardReading {
            get {
                return this.isCardReadingField;
            }
            set {
                this.isCardReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int isChecking {
            get {
                return this.isCheckingField;
            }
            set {
                this.isCheckingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int isOffline {
            get {
                return this.isOfflineField;
            }
            set {
                this.isOfflineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOpen {
            get {
                return this.isOpenField;
            }
            set {
                this.isOpenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isPowerOn {
            get {
                return this.isPowerOnField;
            }
            set {
                this.isPowerOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSealUp {
            get {
                return this.isSealUpField;
            }
            set {
                this.isSealUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isWarning {
            get {
                return this.isWarningField;
            }
            set {
                this.isWarningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfBullet {
            get {
                return this.numOfBulletField;
            }
            set {
                this.numOfBulletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfBulletWarehouse {
            get {
                return this.numOfBulletWarehouseField;
            }
            set {
                this.numOfBulletWarehouseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string numOfGun {
            get {
                return this.numOfGunField;
            }
            set {
                this.numOfGunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class unitInfo {
        
        private string supUnitField;
        
        private string unitCodeField;
        
        private string unitFatherCodeField;
        
        private string unitInfoAddressField;
        
        private string unitInfoCodeField;
        
        private string unitInfoNameField;
        
        private string unitInfoOfficeTelephoneField;
        
        private string unitInfoRemarkField;
        
        private string unitInfoSmallNameField;
        
        private string unitInfoStateField;
        
        private int unitInfosortField;
        
        private unitInfo[] untiListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string supUnit {
            get {
                return this.supUnitField;
            }
            set {
                this.supUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitFatherCode {
            get {
                return this.unitFatherCodeField;
            }
            set {
                this.unitFatherCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoAddress {
            get {
                return this.unitInfoAddressField;
            }
            set {
                this.unitInfoAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoCode {
            get {
                return this.unitInfoCodeField;
            }
            set {
                this.unitInfoCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoName {
            get {
                return this.unitInfoNameField;
            }
            set {
                this.unitInfoNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoOfficeTelephone {
            get {
                return this.unitInfoOfficeTelephoneField;
            }
            set {
                this.unitInfoOfficeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoRemark {
            get {
                return this.unitInfoRemarkField;
            }
            set {
                this.unitInfoRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoSmallName {
            get {
                return this.unitInfoSmallNameField;
            }
            set {
                this.unitInfoSmallNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoState {
            get {
                return this.unitInfoStateField;
            }
            set {
                this.unitInfoStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int unitInfosort {
            get {
                return this.unitInfosortField;
            }
            set {
                this.unitInfosortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("untiList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public unitInfo[] untiList {
            get {
                return this.untiListField;
            }
            set {
                this.untiListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class synInfo {
        
        private gunArk gunArkField;
        
        private System.DateTime syn_Begin_TimeField;
        
        private bool syn_Begin_TimeFieldSpecified;
        
        private user syn_Begin_UserField;
        
        private System.DateTime syn_Final_TimeField;
        
        private bool syn_Final_TimeFieldSpecified;
        
        private user syn_Final_UserField;
        
        private int syn_FlagField;
        
        private string syn_IdField;
        
        private string syn_IpField;
        
        private string syn_ParamField;
        
        private string syn_ProcField;
        
        private string syn_TypeField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime syn_Begin_Time {
            get {
                return this.syn_Begin_TimeField;
            }
            set {
                this.syn_Begin_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool syn_Begin_TimeSpecified {
            get {
                return this.syn_Begin_TimeFieldSpecified;
            }
            set {
                this.syn_Begin_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user syn_Begin_User {
            get {
                return this.syn_Begin_UserField;
            }
            set {
                this.syn_Begin_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime syn_Final_Time {
            get {
                return this.syn_Final_TimeField;
            }
            set {
                this.syn_Final_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool syn_Final_TimeSpecified {
            get {
                return this.syn_Final_TimeFieldSpecified;
            }
            set {
                this.syn_Final_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user syn_Final_User {
            get {
                return this.syn_Final_UserField;
            }
            set {
                this.syn_Final_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int syn_Flag {
            get {
                return this.syn_FlagField;
            }
            set {
                this.syn_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string syn_Id {
            get {
                return this.syn_IdField;
            }
            set {
                this.syn_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string syn_Ip {
            get {
                return this.syn_IpField;
            }
            set {
                this.syn_IpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string syn_Param {
            get {
                return this.syn_ParamField;
            }
            set {
                this.syn_ParamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string syn_Proc {
            get {
                return this.syn_ProcField;
            }
            set {
                this.syn_ProcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string syn_Type {
            get {
                return this.syn_TypeField;
            }
            set {
                this.syn_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class user {
        
        private groupInfo groupinfoField;
        
        private unitInfo unitInfoField;
        
        private string userAddressField;
        
        private int userBannedField;
        
        private string userCardField;
        
        private string userEmailField;
        
        private string userGunLicenseField;
        
        private string userGunLicenseDateField;
        
        private string userIDField;
        
        private int userJobStatusField;
        
        private string userMobileTelepField;
        
        private string userNameField;
        
        private string userOfficeTelepField;
        
        private string userPoliceKindsField;
        
        private string userPoliceNumbField;
        
        private string userPostCodeField;
        
        private int userPrivilegesField;
        
        private string userPwdField;
        
        private string userRankField;
        
        private string userRealNameField;
        
        private string userRemarkField;
        
        private int userSexField;
        
        private int userStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupInfo groupinfo {
            get {
                return this.groupinfoField;
            }
            set {
                this.groupinfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userAddress {
            get {
                return this.userAddressField;
            }
            set {
                this.userAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userBanned {
            get {
                return this.userBannedField;
            }
            set {
                this.userBannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userCard {
            get {
                return this.userCardField;
            }
            set {
                this.userCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userGunLicense {
            get {
                return this.userGunLicenseField;
            }
            set {
                this.userGunLicenseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userGunLicenseDate {
            get {
                return this.userGunLicenseDateField;
            }
            set {
                this.userGunLicenseDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userJobStatus {
            get {
                return this.userJobStatusField;
            }
            set {
                this.userJobStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userMobileTelep {
            get {
                return this.userMobileTelepField;
            }
            set {
                this.userMobileTelepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userOfficeTelep {
            get {
                return this.userOfficeTelepField;
            }
            set {
                this.userOfficeTelepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceKinds {
            get {
                return this.userPoliceKindsField;
            }
            set {
                this.userPoliceKindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceNumb {
            get {
                return this.userPoliceNumbField;
            }
            set {
                this.userPoliceNumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPostCode {
            get {
                return this.userPostCodeField;
            }
            set {
                this.userPostCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userPrivileges {
            get {
                return this.userPrivilegesField;
            }
            set {
                this.userPrivilegesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRank {
            get {
                return this.userRankField;
            }
            set {
                this.userRankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRealName {
            get {
                return this.userRealNameField;
            }
            set {
                this.userRealNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRemark {
            get {
                return this.userRemarkField;
            }
            set {
                this.userRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userSex {
            get {
                return this.userSexField;
            }
            set {
                this.userSexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userState {
            get {
                return this.userStateField;
            }
            set {
                this.userStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class groupInfo {
        
        private int availableField;
        
        private string groupidField;
        
        private string groupleaderidField;
        
        private string unitInfoCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupid {
            get {
                return this.groupidField;
            }
            set {
                this.groupidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupleaderid {
            get {
                return this.groupleaderidField;
            }
            set {
                this.groupleaderidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoCode {
            get {
                return this.unitInfoCodeField;
            }
            set {
                this.unitInfoCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunarkMessageCode {
        
        private string gunarkMessageCode1Field;
        
        private string gunarkMessageCodeIdField;
        
        private string taskIdField;
        
        private string userPoliceNumbField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gunarkMessageCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkMessageCode1 {
            get {
                return this.gunarkMessageCode1Field;
            }
            set {
                this.gunarkMessageCode1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkMessageCodeId {
            get {
                return this.gunarkMessageCodeIdField;
            }
            set {
                this.gunarkMessageCodeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceNumb {
            get {
                return this.userPoliceNumbField;
            }
            set {
                this.userPoliceNumbField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class fingerUser {
        
        private int fingerNumberField;
        
        private string fingerPrintIdField;
        
        private string unitCodeField;
        
        private byte[] userFingerPrintField;
        
        private string userNameField;
        
        private string userPoliceNumbField;
        
        private string userPwdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fingerNumber {
            get {
                return this.fingerNumberField;
            }
            set {
                this.fingerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fingerPrintId {
            get {
                return this.fingerPrintIdField;
            }
            set {
                this.fingerPrintIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] userFingerPrint {
            get {
                return this.userFingerPrintField;
            }
            set {
                this.userFingerPrintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPoliceNumb {
            get {
                return this.userPoliceNumbField;
            }
            set {
                this.userPoliceNumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunArkAdmin {
        
        private string descriptDownContentField;
        
        private string descriptUpContentField;
        
        private System.DateTime dutyBeginField;
        
        private bool dutyBeginFieldSpecified;
        
        private System.DateTime dutyEndField;
        
        private bool dutyEndFieldSpecified;
        
        private string idField;
        
        private int statusField;
        
        private user userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptDownContent {
            get {
                return this.descriptDownContentField;
            }
            set {
                this.descriptDownContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptUpContent {
            get {
                return this.descriptUpContentField;
            }
            set {
                this.descriptUpContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dutyBegin {
            get {
                return this.dutyBeginField;
            }
            set {
                this.dutyBeginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyBeginSpecified {
            get {
                return this.dutyBeginFieldSpecified;
            }
            set {
                this.dutyBeginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dutyEnd {
            get {
                return this.dutyEndField;
            }
            set {
                this.dutyEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyEndSpecified {
            get {
                return this.dutyEndFieldSpecified;
            }
            set {
                this.dutyEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunarkGroupGunBullet {
        
        private string bulletLocationField;
        
        private string gggbIdField;
        
        private string groupIdField;
        
        private int gunLocationField;
        
        private string gunarkIdField;
        
        private string unitInfoCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bulletLocation {
            get {
                return this.bulletLocationField;
            }
            set {
                this.bulletLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gggbId {
            get {
                return this.gggbIdField;
            }
            set {
                this.gggbIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gunLocation {
            get {
                return this.gunLocationField;
            }
            set {
                this.gunLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gunarkId {
            get {
                return this.gunarkIdField;
            }
            set {
                this.gunarkIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitInfoCode {
            get {
                return this.unitInfoCodeField;
            }
            set {
                this.unitInfoCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class taskInfo {
        
        private string apply_UnitField;
        
        private gunArk gunArkField;
        
        private string gun_Task_IdField;
        
        private string rejectAgainRemarkField;
        
        private user rejectAgainUserField;
        
        private string rejectRemarkField;
        
        private user rejectUserField;
        
        private user return_GunBullet_Admin1Field;
        
        private user return_GunBullet_Admin2Field;
        
        private user take_GunBullet_Admin1Field;
        
        private user take_GunBullet_Admin2Field;
        
        private string task_Afterwards_DescriptionField;
        
        private string task_Afterwards_HandleField;
        
        private System.DateTime task_Afterwards_TimeField;
        
        private bool task_Afterwards_TimeFieldSpecified;
        
        private string task_Apply_RemarkField;
        
        private System.DateTime task_Apply_TimeField;
        
        private bool task_Apply_TimeFieldSpecified;
        
        private user task_Apply_UserField;
        
        private string task_Approval_RemarkField;
        
        private System.DateTime task_Approval_TimeField;
        
        private bool task_Approval_TimeFieldSpecified;
        
        private user task_Approval_UserField;
        
        private int task_BigTypeField;
        
        private string task_Check_RemarkField;
        
        private System.DateTime task_Check_TimeField;
        
        private bool task_Check_TimeFieldSpecified;
        
        private user task_Check_UserField;
        
        private int task_Flag_TypeField;
        
        private string task_IDField;
        
        private System.DateTime task_Plan_BeginTimeField;
        
        private bool task_Plan_BeginTimeFieldSpecified;
        
        private System.DateTime task_Plan_FinishTimeField;
        
        private bool task_Plan_FinishTimeFieldSpecified;
        
        private string task_PropertyField;
        
        private System.DateTime task_Real_BeginTimeField;
        
        private bool task_Real_BeginTimeFieldSpecified;
        
        private System.DateTime task_Real_FinishTimeField;
        
        private bool task_Real_FinishTimeFieldSpecified;
        
        private string task_SmallTypeField;
        
        private int task_StatusField;
        
        private string task_againApproval_RemarkField;
        
        private System.DateTime task_againApproval_TimeField;
        
        private bool task_againApproval_TimeFieldSpecified;
        
        private user task_againApproval_UserField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string apply_Unit {
            get {
                return this.apply_UnitField;
            }
            set {
                this.apply_UnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Task_Id {
            get {
                return this.gun_Task_IdField;
            }
            set {
                this.gun_Task_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rejectAgainRemark {
            get {
                return this.rejectAgainRemarkField;
            }
            set {
                this.rejectAgainRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user rejectAgainUser {
            get {
                return this.rejectAgainUserField;
            }
            set {
                this.rejectAgainUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rejectRemark {
            get {
                return this.rejectRemarkField;
            }
            set {
                this.rejectRemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user rejectUser {
            get {
                return this.rejectUserField;
            }
            set {
                this.rejectUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_Admin1 {
            get {
                return this.return_GunBullet_Admin1Field;
            }
            set {
                this.return_GunBullet_Admin1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_Admin2 {
            get {
                return this.return_GunBullet_Admin2Field;
            }
            set {
                this.return_GunBullet_Admin2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_Admin1 {
            get {
                return this.take_GunBullet_Admin1Field;
            }
            set {
                this.take_GunBullet_Admin1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_Admin2 {
            get {
                return this.take_GunBullet_Admin2Field;
            }
            set {
                this.take_GunBullet_Admin2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Afterwards_Description {
            get {
                return this.task_Afterwards_DescriptionField;
            }
            set {
                this.task_Afterwards_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Afterwards_Handle {
            get {
                return this.task_Afterwards_HandleField;
            }
            set {
                this.task_Afterwards_HandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Afterwards_Time {
            get {
                return this.task_Afterwards_TimeField;
            }
            set {
                this.task_Afterwards_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Afterwards_TimeSpecified {
            get {
                return this.task_Afterwards_TimeFieldSpecified;
            }
            set {
                this.task_Afterwards_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Apply_Remark {
            get {
                return this.task_Apply_RemarkField;
            }
            set {
                this.task_Apply_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Apply_Time {
            get {
                return this.task_Apply_TimeField;
            }
            set {
                this.task_Apply_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Apply_TimeSpecified {
            get {
                return this.task_Apply_TimeFieldSpecified;
            }
            set {
                this.task_Apply_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Apply_User {
            get {
                return this.task_Apply_UserField;
            }
            set {
                this.task_Apply_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Approval_Remark {
            get {
                return this.task_Approval_RemarkField;
            }
            set {
                this.task_Approval_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Approval_Time {
            get {
                return this.task_Approval_TimeField;
            }
            set {
                this.task_Approval_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Approval_TimeSpecified {
            get {
                return this.task_Approval_TimeFieldSpecified;
            }
            set {
                this.task_Approval_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Approval_User {
            get {
                return this.task_Approval_UserField;
            }
            set {
                this.task_Approval_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_BigType {
            get {
                return this.task_BigTypeField;
            }
            set {
                this.task_BigTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Check_Remark {
            get {
                return this.task_Check_RemarkField;
            }
            set {
                this.task_Check_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Check_Time {
            get {
                return this.task_Check_TimeField;
            }
            set {
                this.task_Check_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Check_TimeSpecified {
            get {
                return this.task_Check_TimeFieldSpecified;
            }
            set {
                this.task_Check_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_Check_User {
            get {
                return this.task_Check_UserField;
            }
            set {
                this.task_Check_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_Flag_Type {
            get {
                return this.task_Flag_TypeField;
            }
            set {
                this.task_Flag_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_ID {
            get {
                return this.task_IDField;
            }
            set {
                this.task_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Plan_BeginTime {
            get {
                return this.task_Plan_BeginTimeField;
            }
            set {
                this.task_Plan_BeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Plan_BeginTimeSpecified {
            get {
                return this.task_Plan_BeginTimeFieldSpecified;
            }
            set {
                this.task_Plan_BeginTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Plan_FinishTime {
            get {
                return this.task_Plan_FinishTimeField;
            }
            set {
                this.task_Plan_FinishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Plan_FinishTimeSpecified {
            get {
                return this.task_Plan_FinishTimeFieldSpecified;
            }
            set {
                this.task_Plan_FinishTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Property {
            get {
                return this.task_PropertyField;
            }
            set {
                this.task_PropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Real_BeginTime {
            get {
                return this.task_Real_BeginTimeField;
            }
            set {
                this.task_Real_BeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Real_BeginTimeSpecified {
            get {
                return this.task_Real_BeginTimeFieldSpecified;
            }
            set {
                this.task_Real_BeginTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_Real_FinishTime {
            get {
                return this.task_Real_FinishTimeField;
            }
            set {
                this.task_Real_FinishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_Real_FinishTimeSpecified {
            get {
                return this.task_Real_FinishTimeFieldSpecified;
            }
            set {
                this.task_Real_FinishTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_SmallType {
            get {
                return this.task_SmallTypeField;
            }
            set {
                this.task_SmallTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int task_Status {
            get {
                return this.task_StatusField;
            }
            set {
                this.task_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_againApproval_Remark {
            get {
                return this.task_againApproval_RemarkField;
            }
            set {
                this.task_againApproval_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime task_againApproval_Time {
            get {
                return this.task_againApproval_TimeField;
            }
            set {
                this.task_againApproval_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool task_againApproval_TimeSpecified {
            get {
                return this.task_againApproval_TimeFieldSpecified;
            }
            set {
                this.task_againApproval_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user task_againApproval_User {
            get {
                return this.task_againApproval_UserField;
            }
            set {
                this.task_againApproval_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class magazineInfo {
        
        private double bullet_DNField;
        
        private bool bullet_DNFieldSpecified;
        
        private int bullet_Equipment_AmountField;
        
        private System.DateTime bullet_ManufactureDateField;
        
        private bool bullet_ManufactureDateFieldSpecified;
        
        private string bullet_ModelField;
        
        private string bullet_ProducerField;
        
        private System.DateTime bullet_StartTimeField;
        
        private bool bullet_StartTimeFieldSpecified;
        
        private string bullet_groupIDField;
        
        private int capacity_QtyField;
        
        private string clip_ModelField;
        
        private string corresponding_GunNumberField;
        
        private gunArk gunArkField;
        
        private string magazine_Info_IDField;
        
        private string magazine_NameField;
        
        private string magazine_NumberField;
        
        private int magazine_StatusField;
        
        private int stock_QtyField;
        
        private int syn_FlagField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double bullet_DN {
            get {
                return this.bullet_DNField;
            }
            set {
                this.bullet_DNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bullet_DNSpecified {
            get {
                return this.bullet_DNFieldSpecified;
            }
            set {
                this.bullet_DNFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bullet_Equipment_Amount {
            get {
                return this.bullet_Equipment_AmountField;
            }
            set {
                this.bullet_Equipment_AmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime bullet_ManufactureDate {
            get {
                return this.bullet_ManufactureDateField;
            }
            set {
                this.bullet_ManufactureDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bullet_ManufactureDateSpecified {
            get {
                return this.bullet_ManufactureDateFieldSpecified;
            }
            set {
                this.bullet_ManufactureDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_Model {
            get {
                return this.bullet_ModelField;
            }
            set {
                this.bullet_ModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_Producer {
            get {
                return this.bullet_ProducerField;
            }
            set {
                this.bullet_ProducerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime bullet_StartTime {
            get {
                return this.bullet_StartTimeField;
            }
            set {
                this.bullet_StartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bullet_StartTimeSpecified {
            get {
                return this.bullet_StartTimeFieldSpecified;
            }
            set {
                this.bullet_StartTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_groupID {
            get {
                return this.bullet_groupIDField;
            }
            set {
                this.bullet_groupIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int capacity_Qty {
            get {
                return this.capacity_QtyField;
            }
            set {
                this.capacity_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clip_Model {
            get {
                return this.clip_ModelField;
            }
            set {
                this.clip_ModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string corresponding_GunNumber {
            get {
                return this.corresponding_GunNumberField;
            }
            set {
                this.corresponding_GunNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Info_ID {
            get {
                return this.magazine_Info_IDField;
            }
            set {
                this.magazine_Info_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Name {
            get {
                return this.magazine_NameField;
            }
            set {
                this.magazine_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string magazine_Number {
            get {
                return this.magazine_NumberField;
            }
            set {
                this.magazine_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int magazine_Status {
            get {
                return this.magazine_StatusField;
            }
            set {
                this.magazine_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int stock_Qty {
            get {
                return this.stock_QtyField;
            }
            set {
                this.stock_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int syn_Flag {
            get {
                return this.syn_FlagField;
            }
            set {
                this.syn_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class gunInfo {
        
        private gunArk gunArkField;
        
        private int gun_Ammo_amountField;
        
        private int gun_AttachmentField;
        
        private int gun_Bullet_ChecksituationField;
        
        private string gun_Bullet_LocationField;
        
        private string gun_Bullet_NameField;
        
        private string gun_Bullet_NumberField;
        
        private int gun_Bullet_StatusField;
        
        private int gun_Bullet_amountField;
        
        private double gun_DNField;
        
        private int gun_HorseField;
        
        private string gun_Info_IdField;
        
        private string gun_License_IdField;
        
        private System.DateTime gun_ManufactureDateField;
        
        private bool gun_ManufactureDateFieldSpecified;
        
        private string gun_ProducerField;
        
        private int gun_Sight_amountField;
        
        private int gun_Sight_numberField;
        
        private int gun_SituationField;
        
        private System.DateTime gun_StartTimeField;
        
        private bool gun_StartTimeFieldSpecified;
        
        private int gun_isLuggageField;
        
        private System.DateTime in_TimeField;
        
        private bool in_TimeFieldSpecified;
        
        private string loss_DescriptionField;
        
        private System.DateTime out_TimeField;
        
        private bool out_TimeFieldSpecified;
        
        private string remarkField;
        
        private int syn_FlagField;
        
        private unitInfo unitInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Ammo_amount {
            get {
                return this.gun_Ammo_amountField;
            }
            set {
                this.gun_Ammo_amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Attachment {
            get {
                return this.gun_AttachmentField;
            }
            set {
                this.gun_AttachmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Bullet_Checksituation {
            get {
                return this.gun_Bullet_ChecksituationField;
            }
            set {
                this.gun_Bullet_ChecksituationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Location {
            get {
                return this.gun_Bullet_LocationField;
            }
            set {
                this.gun_Bullet_LocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Name {
            get {
                return this.gun_Bullet_NameField;
            }
            set {
                this.gun_Bullet_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Bullet_Number {
            get {
                return this.gun_Bullet_NumberField;
            }
            set {
                this.gun_Bullet_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Bullet_Status {
            get {
                return this.gun_Bullet_StatusField;
            }
            set {
                this.gun_Bullet_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Bullet_amount {
            get {
                return this.gun_Bullet_amountField;
            }
            set {
                this.gun_Bullet_amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double gun_DN {
            get {
                return this.gun_DNField;
            }
            set {
                this.gun_DNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Horse {
            get {
                return this.gun_HorseField;
            }
            set {
                this.gun_HorseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Info_Id {
            get {
                return this.gun_Info_IdField;
            }
            set {
                this.gun_Info_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_License_Id {
            get {
                return this.gun_License_IdField;
            }
            set {
                this.gun_License_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime gun_ManufactureDate {
            get {
                return this.gun_ManufactureDateField;
            }
            set {
                this.gun_ManufactureDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gun_ManufactureDateSpecified {
            get {
                return this.gun_ManufactureDateFieldSpecified;
            }
            set {
                this.gun_ManufactureDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gun_Producer {
            get {
                return this.gun_ProducerField;
            }
            set {
                this.gun_ProducerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Sight_amount {
            get {
                return this.gun_Sight_amountField;
            }
            set {
                this.gun_Sight_amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Sight_number {
            get {
                return this.gun_Sight_numberField;
            }
            set {
                this.gun_Sight_numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_Situation {
            get {
                return this.gun_SituationField;
            }
            set {
                this.gun_SituationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime gun_StartTime {
            get {
                return this.gun_StartTimeField;
            }
            set {
                this.gun_StartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gun_StartTimeSpecified {
            get {
                return this.gun_StartTimeFieldSpecified;
            }
            set {
                this.gun_StartTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gun_isLuggage {
            get {
                return this.gun_isLuggageField;
            }
            set {
                this.gun_isLuggageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime in_Time {
            get {
                return this.in_TimeField;
            }
            set {
                this.in_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool in_TimeSpecified {
            get {
                return this.in_TimeFieldSpecified;
            }
            set {
                this.in_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loss_Description {
            get {
                return this.loss_DescriptionField;
            }
            set {
                this.loss_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime out_Time {
            get {
                return this.out_TimeField;
            }
            set {
                this.out_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool out_TimeSpecified {
            get {
                return this.out_TimeFieldSpecified;
            }
            set {
                this.out_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int syn_Flag {
            get {
                return this.syn_FlagField;
            }
            set {
                this.syn_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gunark.bjut.com/")]
    public partial class taskInfoDetail {
        
        private int admin_Confirm_FlagField;
        
        private int apply_Bullet_QtyField;
        
        private string bullet_ModelField;
        
        private int depletion_Bullet_QtyField;
        
        private string depletion_Bullet_RemarkField;
        
        private int flag_TypeField;
        
        private gunArk gunArkField;
        
        private gunInfo gunInfoField;
        
        private gunPositionInfo gunPositionInfoField;
        
        private user gun_Duty_UserField;
        
        private int leader_Confirm_FlagField;
        
        private magazineInfo magazineInfoField;
        
        private System.DateTime return_GunBullet_TimeField;
        
        private bool return_GunBullet_TimeFieldSpecified;
        
        private user return_GunBullet_UserField;
        
        private System.DateTime take_GunBullet_TimeField;
        
        private bool take_GunBullet_TimeFieldSpecified;
        
        private user take_GunBullet_UserField;
        
        private taskInfo taskInfoField;
        
        private string task_Detail_IDField;
        
        private unitInfo unitInfoField;
        
        private int user_Confirm_FlagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int admin_Confirm_Flag {
            get {
                return this.admin_Confirm_FlagField;
            }
            set {
                this.admin_Confirm_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int apply_Bullet_Qty {
            get {
                return this.apply_Bullet_QtyField;
            }
            set {
                this.apply_Bullet_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bullet_Model {
            get {
                return this.bullet_ModelField;
            }
            set {
                this.bullet_ModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int depletion_Bullet_Qty {
            get {
                return this.depletion_Bullet_QtyField;
            }
            set {
                this.depletion_Bullet_QtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string depletion_Bullet_Remark {
            get {
                return this.depletion_Bullet_RemarkField;
            }
            set {
                this.depletion_Bullet_RemarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int flag_Type {
            get {
                return this.flag_TypeField;
            }
            set {
                this.flag_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunArk gunArk {
            get {
                return this.gunArkField;
            }
            set {
                this.gunArkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunInfo gunInfo {
            get {
                return this.gunInfoField;
            }
            set {
                this.gunInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public gunPositionInfo gunPositionInfo {
            get {
                return this.gunPositionInfoField;
            }
            set {
                this.gunPositionInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user gun_Duty_User {
            get {
                return this.gun_Duty_UserField;
            }
            set {
                this.gun_Duty_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leader_Confirm_Flag {
            get {
                return this.leader_Confirm_FlagField;
            }
            set {
                this.leader_Confirm_FlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public magazineInfo magazineInfo {
            get {
                return this.magazineInfoField;
            }
            set {
                this.magazineInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime return_GunBullet_Time {
            get {
                return this.return_GunBullet_TimeField;
            }
            set {
                this.return_GunBullet_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool return_GunBullet_TimeSpecified {
            get {
                return this.return_GunBullet_TimeFieldSpecified;
            }
            set {
                this.return_GunBullet_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user return_GunBullet_User {
            get {
                return this.return_GunBullet_UserField;
            }
            set {
                this.return_GunBullet_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime take_GunBullet_Time {
            get {
                return this.take_GunBullet_TimeField;
            }
            set {
                this.take_GunBullet_TimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool take_GunBullet_TimeSpecified {
            get {
                return this.take_GunBullet_TimeFieldSpecified;
            }
            set {
                this.take_GunBullet_TimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public user take_GunBullet_User {
            get {
                return this.take_GunBullet_UserField;
            }
            set {
                this.take_GunBullet_UserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public taskInfo taskInfo {
            get {
                return this.taskInfoField;
            }
            set {
                this.taskInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string task_Detail_ID {
            get {
                return this.task_Detail_IDField;
            }
            set {
                this.task_Detail_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unitInfo unitInfo {
            get {
                return this.unitInfoField;
            }
            set {
                this.unitInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int user_Confirm_Flag {
            get {
                return this.user_Confirm_FlagField;
            }
            set {
                this.user_Confirm_FlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunPosNotOnGunarkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyBulletInfoCompletedEventHandler(object sender, getApplyBulletInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyBulletInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyBulletInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setRejectDeleteGunarkCompletedEventHandler(object sender, setRejectDeleteGunarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setRejectDeleteGunarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setRejectDeleteGunarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunExportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunPositionInfoCompletedEventHandler(object sender, getGunPositionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunPositionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunPositionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunPositionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunPositionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getTaskDetailCompletedEventHandler(object sender, getTaskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public taskInfoDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((taskInfoDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setMagazineStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setChangePositionSuccessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void closeDoorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void uploadOpenMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public user[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((user[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setSynInfoSuccessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkGroupGunBulletCompletedEventHandler(object sender, getGunarkGroupGunBulletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkGroupGunBulletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkGroupGunBulletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunarkGroupGunBullet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunarkGroupGunBullet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeScrapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunPositionSealCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeSealCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunLuggageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentMissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserPrivilegeCompletedEventHandler(object sender, getUserPrivilegeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPrivilegeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPrivilegeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getBulletTaskStateCompletedEventHandler(object sender, getBulletTaskStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBulletTaskStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBulletTaskStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentBulletTaskCompletedEventHandler(object sender, setUrgentBulletTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUrgentBulletTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUrgentBulletTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserByUserIDCompletedEventHandler(object sender, getUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public user Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((user)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void reviewCancelTaskCompletedEventHandler(object sender, reviewCancelTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reviewCancelTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reviewCancelTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setOnlineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void updateTaskStatusByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void reviewTaskCompletedEventHandler(object sender, reviewTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reviewTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reviewTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getOnDutyCompletedEventHandler(object sender, getOnDutyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOnDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOnDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArkAdmin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArkAdmin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunOnPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunInUseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getFingerUserInfoCompletedEventHandler(object sender, getFingerUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFingerUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFingerUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fingerUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fingerUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentGunBulletTaskNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunNotOnPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserInfoDetailCompletedEventHandler(object sender, getUserInfoDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setDoingTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunInfoCompletedEventHandler(object sender, getGunInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setMagazineInfoCheckCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunarkTaskPassCompletedEventHandler(object sender, setGunarkTaskPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setGunarkTaskPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setGunarkTaskPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyBulletDetailInfoCompletedEventHandler(object sender, getApplyBulletDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyBulletDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyBulletDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void rejectCancelTaskCompletedEventHandler(object sender, rejectCancelTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rejectCancelTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rejectCancelTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkMessageCodeCompletedEventHandler(object sender, getGunarkMessageCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkMessageCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkMessageCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunarkMessageCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunarkMessageCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void cancelAlarmCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getAlarmRecordCompletedEventHandler(object sender, getAlarmRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAlarmRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAlarmRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunarkcheckingSuccessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSynInfoCompletedEventHandler(object sender, getSynInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSynInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSynInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public synInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((synInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setTurnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunpositionLuggageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setgunpositionUnLuggageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUserIfoCompletedEventHandler(object sender, getUserIfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserIfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserIfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setFinishTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunInStoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getUnitInfoCompletedEventHandler(object sender, getUnitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public unitInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((unitInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkTaskStateCompletedEventHandler(object sender, getGunarkTaskStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkTaskStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkTaskStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getCautionNumCompletedEventHandler(object sender, getCautionNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCautionNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCautionNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getMagazineInfoCompletedEventHandler(object sender, getMagazineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMagazineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMagazineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public magazineInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((magazineInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkInfoCompletedEventHandler(object sender, getGunarkInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentGunTaskCompletedEventHandler(object sender, setUrgentGunTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUrgentGunTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUrgentGunTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setMaintainconfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getGunarkListCompletedEventHandler(object sender, getGunarkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGunarkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGunarkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gunArk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gunArk[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyMagazineDetailInfoCompletedEventHandler(object sender, getApplyMagazineDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyMagazineDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyMagazineDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyBulletGunDetailInfoCompletedEventHandler(object sender, getApplyBulletGunDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyBulletGunDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyBulletGunDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setUrgentGunBulletTaskCompletedEventHandler(object sender, setUrgentGunBulletTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUrgentGunBulletTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUrgentGunBulletTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setOfflineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setTemperatureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void rejectTaskCompletedEventHandler(object sender, rejectTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rejectTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rejectTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunBeAllotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setAlarmCompletedEventHandler(object sender, setAlarmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setFingerUserInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getSynGunarkInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyGunarkDetailInfoCompletedEventHandler(object sender, getApplyGunarkDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyGunarkDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyGunarkDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setGunarkDeleteTaskPassCompletedEventHandler(object sender, setGunarkDeleteTaskPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setGunarkDeleteTaskPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setGunarkDeleteTaskPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getTaskInfoCompletedEventHandler(object sender, getTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public taskInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((taskInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void setRejectAddGunarkCompletedEventHandler(object sender, setRejectAddGunarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setRejectAddGunarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setRejectAddGunarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void reviewModifyTaskCompletedEventHandler(object sender, reviewModifyTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reviewModifyTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reviewModifyTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getApplyGunarkInfoCompletedEventHandler(object sender, getApplyGunarkInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyGunarkInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyGunarkInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591